<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>非淡泊无以明志，非宁静无以致远。 on 非淡泊无以明志，非宁静无以致远。</title>
    <link>/</link>
    <description>Recent content in 非淡泊无以明志，非宁静无以致远。 on 非淡泊无以明志，非宁静无以致远。</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Sheng Luan</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>visPedigree使用指南</title>
      <link>/post/the-first-package-vispedigree-0-1/</link>
      <pubDate>Mon, 24 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/the-first-package-vispedigree-0-1/</guid>
      <description>&lt;p&gt;在动物选择育种中，系谱的作用不言而喻。一方面利用系谱信息，可以提高育种值估计和选择的准确度；另外，可以控制近亲交配，避免性状衰退。因此，一个可靠准确的系谱记录对于选择育种是非常重要的。此外，系谱往往通过个体、父本和母本三列形式保存，很难直观的查看个体的祖先和后代信息。因此，系谱的可视化就变得非常重要。在windows平台下，The University of Minnesota杨达教授课题组开发了一个可用于显示个体系谱的&lt;a href=&#34;https://animalgene.umn.edu/pedigraph&#34;&gt;pedigraph&lt;/a&gt;软件，可以显示很多个体的系谱，功能非常强大，但需要利用参数文件，配置使用。 The University of New England的Brian Kinghorn教授开发了&lt;a href=&#34;https://bkinghor.une.edu.au/pedigree.htm&#34;&gt;pedigree viewer&lt;/a&gt;软件，可以整理、提纯系谱，并且可以在窗口中直观地显示个体的系谱，但如果个体的数量非常多，个体将重叠在一起，系谱显示还需要进一步优化。在R环境下，pedigree，nadiv，optiSel等包均有系谱整理的功能，kinship2, synbreed等包都可以画图，但是一旦系谱包括的个体数量多，画出来的系谱树，个体间重叠非常厉害。&lt;/p&gt;
&lt;p&gt;因此利用data.table和igraph两个包处理数据、绘图能力强的特点，开发了&lt;a href=&#34;https://github.com/luansheng/visPedigree&#34;&gt;visPedigree&lt;/a&gt;包，进一步增强了系谱整理的功能，可以设置世代数，追溯提取任意个体的祖先和后代个体；并通过简化系谱和显示系谱缩略图等方法，自动优化系谱树布局、快速显示包括大量个体(每个世代个体数&amp;gt;10000)的系谱。主要内容包括：&lt;/p&gt;
&lt;p&gt;1 &lt;a href=&#34;#1&#34;&gt;安装visPedigree包&lt;/a&gt;&lt;br /&gt;
2 &lt;a href=&#34;#2&#34;&gt;系谱格式说明&lt;/a&gt;&lt;br /&gt;
3 &lt;a href=&#34;#3&#34;&gt;检查和整理系谱&lt;/a&gt;&lt;br /&gt;
3.1 &lt;a href=&#34;#3.1&#34;&gt;概述&lt;/a&gt;&lt;br /&gt;
3.2 &lt;a href=&#34;#3.2&#34;&gt;提取指定个体的系谱&lt;/a&gt;&lt;br /&gt;
3.3 &lt;a href=&#34;#3.3&#34;&gt;数字化系谱&lt;/a&gt;&lt;br /&gt;
4 &lt;a href=&#34;#4&#34;&gt;绘制系谱&lt;/a&gt;&lt;br /&gt;
4.1 &lt;a href=&#34;#4.1&#34;&gt;绘制简单系谱图&lt;/a&gt;&lt;br /&gt;
4.2 &lt;a href=&#34;#4.2&#34;&gt;绘制简化系谱图&lt;/a&gt;&lt;br /&gt;
4.3 &lt;a href=&#34;#4.3&#34;&gt;绘制系谱框架图&lt;/a&gt;&lt;br /&gt;
4.4 &lt;a href=&#34;#4.4&#34;&gt;应用场景&lt;/a&gt;&lt;br /&gt;
4.4.1 &lt;a href=&#34;#4.4.1&#34;&gt;追踪个体的奠基者组成情况&lt;/a&gt;&lt;br /&gt;
4.4.2 &lt;a href=&#34;#4.4.2&#34;&gt;观察配种方案中不同家系的贡献情况&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;vispedigree&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;a id=&#34;1&#34;&gt;1 安装visPedigree包&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;目前visPedigree包还没有发布到cran，但利用devtools包，可以从github上进行安装。&lt;/p&gt;
&lt;p&gt;以Rstudio平台为例，如果没有安装devtools包，首先进行安装：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;devtools&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装后，加载devtools&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;suppressPackageStartupMessages(require(devtools))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;从github上安装visPedigree&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install_github(&amp;quot;luansheng/visPedigree&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后加载visPedigree包。该包基于data.table和igraph包开发，如果这两个包没有安装，也会一并安装。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;suppressPackageStartupMessages(require(visPedigree))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;a id=&#34;2&#34;&gt;2 系谱格式说明&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;系谱数据的前三列顺序必须为个体、父本和母本ID，系谱文件中可以包括其他信息如性别、出生年月、世代等。&lt;/p&gt;
&lt;p&gt;个体丢失的亲本可以用0、*、“NA”等表示，推荐用0表示。空格和空值也可表示丢失亲本，但是不推荐使用。个体列如果存在这些值，该行将直接被删除。
其他列如性别中的丢失值，请直接用NA来表示。&lt;/p&gt;
&lt;p&gt;如果从文件中读取系谱信息，建议使用data.table包的fread函数。该函数功能非常强大，可以自动识别文本中各种分隔符。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ped_2 &amp;lt;- data.table::fread(file=&amp;quot;datasets/ped2.csv&amp;quot;,
                           sep=&amp;quot;,&amp;quot;,
                           header = TRUE,
                           stringsAsFactors = FALSE)
head(ped_2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          ID Sire DYm  Sex Cand
## 1: X0YY0500    0   0 Male    0
## 2: X0YY0600    0   0 Male    0
## 3: X0YY0700    0   0 Male    0
## 4: X0YY1200    0   0 Male    0
## 5: X0YX0300    0   0 Male    0
## 6: X0YX0400    0   0 Male    0&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;a id=&#34;3&#34;&gt;3 检查和整理系谱&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;a id=&#34;3.1&#34;&gt;3.1 概述&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;通过tidyped函数可以检查和整理系谱，主要包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检查系谱是否存在重复个体编号；如果存在，删除重复个体，并给出提示；&lt;/li&gt;
&lt;li&gt;检查是否存在同时做父本和母本的个体；如果存在，给出提示；&lt;/li&gt;
&lt;li&gt;检查是否存在系谱循环Pedigree loop，即个体互为祖先和后裔；如果存在，给出提示并停止运行程序；&lt;/li&gt;
&lt;li&gt;将未包括在个体列的奠基者个体加入到系谱中，并将其双亲设置为丢失值NA；&lt;/li&gt;
&lt;li&gt;将祖先个体排序在后裔个体前边，进行系谱个体重排序；&lt;/li&gt;
&lt;li&gt;检查个体的性别，补充丢失的性别信息；&lt;/li&gt;
&lt;li&gt;生成数字化系谱；&lt;/li&gt;
&lt;li&gt;提取指定个体、指定世代的祖先和后裔系谱；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;visPedigree包中自带多个数据集。可以通过下行命令查看。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data(package=&amp;quot;visPedigree&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;选择simple_ped系谱数据集。它包括四列，前三列为个体、父本和母本，最后一列是性别。其中一些个体的亲本丢失，用0、*、NA等表示，而且奠基者个体没有补充在系谱中。并且一些亲本排在子代的后边。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(simple_ped)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        ID   Sire    Dam    Sex
## 1: J4Y326 J3Y620 J3Y771   male
## 2: J1H419 J0Z938 J0Z167 female
## 3: J2F588     NA J1Z417 female
## 4: J1J576 J0Z938 J0Z843   male
## 5: J1C802 J0Z333 J0C355   male
## 6: J2Z411 J1X971 J1J134 female&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tail(simple_ped)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        ID   Sire    Dam    Sex
## 1: J1E852 J0Z848 J0Z624 female
## 2: J1H604 J0C583 J0Z380 female
## 3: J5X804 J4Y326 J4E185 female
## 4: J1I438 J0Z990 J0Z808   male
## 5: J2C808 J1I975 J1F266   male
## 6: J1K462 J0C317 J0C450 female&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 系谱数据集包括的个体数
nrow(simple_ped)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 31&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 查找亲本丢失的个体记录信息
simple_ped[Sire %in% c(&amp;quot;0&amp;quot;,&amp;quot;*&amp;quot;,&amp;quot;NA&amp;quot;,NA) | Dam %in% c(&amp;quot;0&amp;quot;,&amp;quot;*&amp;quot;,&amp;quot;NA&amp;quot;,NA)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        ID   Sire    Dam    Sex
## 1: J2F588     NA J1Z417 female
## 2: J1J858 J0Z060      * female
## 3: J3X697 J2Z903      0 female&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;小测试：将J0Z167雌性个体，设为J2F588个体的父本。然后运行tidyped，将会发现这个问题并给出提示。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- data.table::copy(simple_ped)
x[ID == &amp;quot;J2F588&amp;quot;,Sire:=&amp;quot;J0Z167&amp;quot;]
y &amp;lt;- tidyped(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in checkped(ped, addgen): Blank, Zero, asterisk, or NA are read as
## a missing parent in the dam column of the pedigree.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in checkped(ped, addgen): The following individuals are
## simultaneously bisexual.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in checkped(ped, addgen): J0Z167&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;利用tidyped函数整理simple_ped系谱，将丢失的亲本替换为NA，将子代排在亲本前边，在系谱中补充丢失的奠基者个体信息。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tidy_simple_ped &amp;lt;- tidyped(simple_ped)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in checkped(ped, addgen): Blank, Zero, asterisk, or NA are read as
## a missing parent in the sire column of the pedigree.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in checkped(ped, addgen): Blank, Zero, asterisk, or NA are read as
## a missing parent in the dam column of the pedigree.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(tidy_simple_ped)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       Ind Sire  Dam    Sex Gen IndNum SireNum DamNum
## 1: J0C032 &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; female   1      1       0      0
## 2: J0C185 &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; female   1      2       0      0
## 3: J0C231 &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; female   1      3       0      0
## 4: J0C317 &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt;   male   1      4       0      0
## 5: J0C450 &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; female   1      5       0      0
## 6: J0C561 &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt;   male   1      6       0      0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tail(tidy_simple_ped)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       Ind   Sire    Dam    Sex Gen IndNum SireNum DamNum
## 1: J1C802 J0Z333 J0C355   male   5     54      47     46
## 2: J4E185 J3L886 J3X697 female   5     55      48     49
## 3: J4Y326 J3Y620 J3Y771   male   5     56      50     51
## 4: J1C929 J0Z511 J0Z444   male   6     57      53     52
## 5: J2Y434 J1C802 J1H419 female   6     58      54     28
## 6: J5X804 J4Y326 J4E185 female   6     59      56     55&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nrow(tidy_simple_ped)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 59&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;整理后的系谱数据集，补充了奠基者个体及其性别信息，并且将亲本排序在后代前边，个体数量变为由31增加为59。个体、父本和母本的列名字重新命名为Ind、Sire和Dam。丢失的亲本统一替换为NA，tidyped函数运行后会有相应提示。tidyped函数整理后的系谱数据集默认增加了Gen和IndNum、SireNum和DamNum四列。如果simple_ped没有包括Sex列，也会增加该列。&lt;/p&gt;
&lt;p&gt;把addgen和addnum参数设置为FALSE，整理后的系谱文件将不返回Gen和IndNum、SireNum和DamNum四列。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tidy_simple_ped_no_gen_num &amp;lt;- tidyped(simple_ped,addgen = FALSE,addnum = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in checkped(ped, addgen): Blank, Zero, asterisk, or NA are read as
## a missing parent in the sire column of the pedigree.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in checkped(ped, addgen): Blank, Zero, asterisk, or NA are read as
## a missing parent in the dam column of the pedigree.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(tidy_simple_ped_no_gen_num)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       Ind Sire  Dam  Sex
## 1: J0Z333 &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; male
## 2: J0Z511 &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; male
## 3: J0Z664 &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; male
## 4: J0Z848 &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; male
## 5: J0Z475 &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; male
## 6: J0Z938 &amp;lt;NA&amp;gt; &amp;lt;NA&amp;gt; male&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;整理完毕后的系谱，可以利用data.table包的fwrite函数保存为文件，供ASReml等遗传评估软件使用。
保存为系谱文件时，丢失的亲本统一用0代替。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;saved_ped &amp;lt;- data.table::copy(tidy_simple_ped)
saved_ped[is.na(Sire),Sire:=&amp;quot;0&amp;quot;]
saved_ped[is.na(Dam),Dam:=&amp;quot;0&amp;quot;]
data.table::fwrite(x=saved_ped,file = &amp;quot;tidysimpleped.csv&amp;quot;,sep=&amp;quot;,&amp;quot;,quote = FALSE)
head(saved_ped)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;a id=&#34;3.2&#34;&gt;3.2 提取指定个体的系谱&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;设置cand参数，可以追溯指定个体的系谱。并且会在返回的数据集中增加新的一列Cand。TRUE表示该个体为cand个体。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tidy_simple_ped_J5X804_ancestors &amp;lt;- tidyped(ped=tidy_simple_ped_no_gen_num,cand=&amp;quot;J5X804&amp;quot;)
tail(tidy_simple_ped_J5X804_ancestors)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       Ind   Sire    Dam    Sex  Cand Gen IndNum SireNum DamNum
## 1: J3X697 J2Z903   &amp;lt;NA&amp;gt; female FALSE   4     45      43      0
## 2: J3Y620 J2C161 J2Z411   male FALSE   4     46      37     42
## 3: J3Y771 J2G465 J2X544 female FALSE   4     47      40     41
## 4: J4E185 J3L886 J3X697 female FALSE   5     48      44     45
## 5: J4Y326 J3Y620 J3Y771   male FALSE   5     49      46     47
## 6: J5X804 J4Y326 J4E185 female  TRUE   6     50      49     48&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;默认追溯个体至奠基者祖先的系谱。如果只想追溯几代，可以设置tracegen参数。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tidy_simple_ped_J5X804_ancestors_2 &amp;lt;- tidyped(ped=tidy_simple_ped_no_gen_num,cand=&amp;quot;J5X804&amp;quot;,tracegen = 2)
print(tidy_simple_ped_J5X804_ancestors_2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       Ind   Sire    Dam    Sex  Cand Gen IndNum SireNum DamNum
## 1: J3L886   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   male FALSE   1      1       0      0
## 2: J3X697   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt; female FALSE   1      2       0      0
## 3: J3Y620   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   male FALSE   1      3       0      0
## 4: J3Y771   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt; female FALSE   1      4       0      0
## 5: J4E185 J3L886 J3X697 female FALSE   2      5       1      2
## 6: J4Y326 J3Y620 J3Y771   male FALSE   2      6       3      4
## 7: J5X804 J4Y326 J4E185 female  TRUE   3      7       6      5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上述代码将追溯个体J5X804两个世代。&lt;/p&gt;
&lt;p&gt;如果对个体的后代感兴趣，可以通过设置trace参数来实现。&lt;/p&gt;
&lt;p&gt;trace参数有三个选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“up”-追溯至祖先个体；&lt;/li&gt;
&lt;li&gt;“down”-追溯至后裔个体；&lt;/li&gt;
&lt;li&gt;“all”-同时追溯祖先和后裔个体。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tidy_simple_ped_J0Z990_offspring &amp;lt;- tidyped(ped=tidy_simple_ped_no_gen_num,can=&amp;quot;J0Z990&amp;quot;,trace=&amp;quot;down&amp;quot;)
print(tidy_simple_ped_J0Z990_offspring)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       Ind   Sire    Dam    Sex  Cand Gen IndNum SireNum DamNum
## 1: J0Z990   &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;   male  TRUE   1      1       0      0
## 2: J1I438 J0Z990   &amp;lt;NA&amp;gt;   male FALSE   2      2       1      0
## 3: J2G465 J1I438   &amp;lt;NA&amp;gt;   male FALSE   3      3       2      0
## 4: J3Y771 J2G465   &amp;lt;NA&amp;gt; female FALSE   4      4       3      0
## 5: J4Y326   &amp;lt;NA&amp;gt; J3Y771   male FALSE   5      5       0      4
## 6: J5X804 J4Y326   &amp;lt;NA&amp;gt; female FALSE   6      6       5      0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;追溯J0Z990的子代，可以发现共计有5个后裔个体。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;a id=&#34;3.3&#34;&gt;3.3 数字化系谱&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一些程序，会要求提供数字系谱进行遗传评估。在计算加性遗传相关矩阵时，也要求个体连续编号。
tidyped函数默认会增加一个三列（IndNum、SireNum和DamNum）的数字系谱。如果不需要，可以设置&lt;code&gt;addnum=FALSE&lt;/code&gt;将该功能关闭。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;a id=&#34;4&#34;&gt;4 绘制系谱&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;利用visped函数，可以绘制多代系谱图。系谱图可以在R、Rstudio默认图形设备显示，并且可以保存在pdf文件中。保存在pdf文件中的系谱图是矢量图，更为清晰、可辨认，个体间不会发生重叠现象。当系谱中个体的数量多，个体的ID编号较长时，适合保存在pdf文件中。如果很多个体为全同胞个体，譬如水产动物的核心育种群体，可以对系谱进行简化显示，这样即使每代个体数量超过10000，也可以非常快的绘制出系谱图。如果每个世代包括的个体数量太多，且个体的ID太长，受限于pdf文件的宽度（最大为200英寸），无法绘制系谱图时，将不显示个体的ID号，只显示一个系谱的缩略图，用于帮助育种者快速浏览核心群体的构建过程，查看是否有外血引入。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重要提示：&lt;/strong&gt;强烈推荐在整理系谱时，指定cand参数。根据cand参数指定的个体提纯的系谱，个体所属世代的推断更加准确，个体在绘制出的系谱图中所在的位置将更为合理。&lt;/p&gt;
&lt;p&gt;绘制simple_ped系谱数据集中个体J5X804的2代祖先系谱图，高清矢量图见&lt;a href=&#34;/post/doc/simplepedJ5x804.pdf&#34;&gt;pdf文件&lt;/a&gt;：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;visped(tidy_simple_ped_J5X804_ancestors_2, file=&amp;quot;doc/simplepedJ5x804.pdf&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The vector drawing of the pedigree is saved in the C:/Users/luan_/OneDrive/hugo/luansheng/content/post/doc/simplepedJ5x804.pdf file&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The cex for individual label is 0.7.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Please decrease the value of the paremter cex if the label&amp;#39;s width is longer than that of the circle or square in the graph.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Please increase the value of the paremter cex if the label&amp;#39;s width is shorter than that of the circle or square in the graph.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-09-24-the-first-package-vispedigree-0-1_files/figure-html/simplepedJ5x804-1.png&#34; width=&#34;2700&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在系谱图中，使用了2种形状和3种颜色来表示各种信息。圆形代表个体，正方形代表简化后的全同胞个体。暗天蓝色表示雄性，暗金黄色表示雌性，暗橄榄绿表示性别未知。系谱图上顶端为祖先个体，底部为后裔个体。亲本和子代之间，通过一个点进行连接，子代到中间节点的连线均为灰色，中间节点连接到父本和母本的线，与父母本各自的颜色相同。&lt;/p&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;a id=&#34;4.1&#34;&gt;4.1 绘制简单系谱图&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;绘制整理后的simple_ped系谱图，在R或者Rstudio默认图形设备显示。整理系谱数据集时，需要将tidyped函数的addgen和addnum参数设置为TRUE。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;visped(tidy_simple_ped)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The cex for individual label is 0.7.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Please decrease the value of the paremter cex if the label&amp;#39;s width is longer than that of the circle or square in the graph.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Please increase the value of the paremter cex if the label&amp;#39;s width is shorter than that of the circle or square in the graph.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## It is recommended that the pedigree graph is saved in the pdf file using the parameter file&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The graph in the pdf file is a vector drawing: shapes, labels and lines are legible; shapes and labels isn&amp;#39;t overlapped.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-09-24-the-first-package-vispedigree-0-1_files/figure-html/vissimpleped-1.png&#34; width=&#34;3600&#34; /&gt;&lt;/p&gt;
&lt;p&gt;通常在Rstudio的Plots面板上显示的图片，清晰度较差，如果个体数量多，受限于默认的图片显示尺寸，个体ID相互间也会发生重叠。将系谱图存为pdf文件可以有效的避免上述问题，获得高质量的矢量图。设置showgraph = FALSE，将不在默认图形设备上输出图形。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;suppressMessages(visped(tidy_simple_ped, showgraph = FALSE, file=&amp;quot;doc/simpleped.pdf&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打开&lt;a href=&#34;/post/doc/simpleped.pdf&#34;&gt;simpleped.pdf&lt;/a&gt;文件，会看到高清晰度的系谱。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;a id=&#34;4.2&#34;&gt;4.2 绘制简化系谱图&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;对包自带的deep_ped进行整理，然后绘制系谱图&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;visped(tidyped(deep_ped))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  Too many individuals (&amp;gt;=3362) in one generation!!! Two choices:
1. Removing full-sib individuals using the parameter compact = TRUE; or, 
2. Visualizing all nodes without labels using the parameter outline = TRUE.
Rerun visped() function!&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;函数提示，某个世代包括的个体数量太多，无法绘制系谱图。建议利用compact或者outline参数来简化系谱图。&lt;/p&gt;
&lt;p&gt;首先尝试一下compact参数，并且输出到deepped1.pdf文件中。在默认图形设备上输出的图片，由于个体数量太多，受限于默认设置的图片尺寸不够大，因此重叠问题严重。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;visped(tidyped(deep_ped),compact = TRUE, showgraph=TRUE, file=&amp;quot;doc/deepped1.pdf&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in checkped(ped, addgen): Blank, Zero, asterisk, or NA are read as
## a missing parent in the sire column of the pedigree.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in checkped(ped, addgen): Blank, Zero, asterisk, or NA are read as
## a missing parent in the dam column of the pedigree.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The vector drawing of the pedigree is saved in the C:/Users/luan_/OneDrive/hugo/luansheng/content/post/doc/deepped1.pdf file&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The cex for individual label is 0.595.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Please decrease the value of the paremter cex if the label&amp;#39;s width is longer than that of the circle or square in the graph.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Please increase the value of the paremter cex if the label&amp;#39;s width is shorter than that of the circle or square in the graph.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-09-24-the-first-package-vispedigree-0-1_files/figure-html/reduceped1-1.png&#34; width=&#34;3600&#34; /&gt;
打开&lt;a href=&#34;/post/doc/deepped1.pdf&#34;&gt;deepped1.pdf&lt;/a&gt;文件,查看高清的矢量系谱图。最低端个体大部分为正方形，内部的数字是简化后不同家系的全同胞雄性和雌性个体数。如果感觉个体的ID长度小于方形或者圆形，不是很匹配，可以将visped函数给出的cex参数值0.63，进一步变大。cex用来控制图中个体label(ID)的大小，cex越大，个体ID越大，反之亦然。cex取值范围一般为0-1，也可以大于1，每次调整，以0.1作为一个单位。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;visped(tidyped(deep_ped),compact = TRUE, cex=0.83, showgraph = FALSE, file=&amp;quot;doc/deepped2.pdf&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in checkped(ped, addgen): Blank, Zero, asterisk, or NA are read as
## a missing parent in the sire column of the pedigree.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in checkped(ped, addgen): Blank, Zero, asterisk, or NA are read as
## a missing parent in the dam column of the pedigree.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The vector drawing of the pedigree is saved in the C:/Users/luan_/OneDrive/hugo/luansheng/content/post/doc/deepped2.pdf file&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The cex for individual label is 0.83.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Please decrease the value of the paremter cex if the label&amp;#39;s width is longer than that of the circle or square in the graph.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Please increase the value of the paremter cex if the label&amp;#39;s width is shorter than that of the circle or square in the graph.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再打开&lt;a href=&#34;/post/doc/deepped2.pdf&#34;&gt;deepped2.pdf&lt;/a&gt;文件,查看高清的矢量系谱图，ID与图形的匹配度更高。如果感觉不合适，可以继续调整cex。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;a id=&#34;4.3&#34;&gt;4.3 绘制系谱框架图&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;设置&lt;code&gt;outline=TRUE&lt;/code&gt;绘制系谱的框架图，该图将不会显示系谱个体的ID号。当系谱包括的个体数量特别多时，框架图将非常有效。&lt;/p&gt;
&lt;p&gt;通过这个图，可以更为清晰的发现在某些世代有外血群体引入。生成的pdf文件请点击&lt;a href=&#34;/post/doc/deepped3.pdf&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;suppressMessages(visped(tidyped(deep_ped),compact = TRUE, outline=TRUE, showgraph = TRUE, file=&amp;quot;doc/deepped3.pdf&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in checkped(ped, addgen): Blank, Zero, asterisk, or NA are read as
## a missing parent in the sire column of the pedigree.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in checkped(ped, addgen): Blank, Zero, asterisk, or NA are read as
## a missing parent in the dam column of the pedigree.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-09-24-the-first-package-vispedigree-0-1_files/figure-html/reduceped3-1.png&#34; width=&#34;3600&#34; /&gt;&lt;/p&gt;
&lt;p&gt;绘制包中另外一个系谱数据集，其中包括了大量的全同胞个体，只提取2007年出生个体及其祖先的系谱。pdf系谱图见&lt;a href=&#34;/post/doc/bigfullsibped.pdf&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cand_2007_G8_labels &amp;lt;- big_family_size_ped[(Year == 2007) &amp;amp; (substr(Ind,1,2) == &amp;quot;G8&amp;quot;),Ind]
cand_2007_G8_tidy_ped &amp;lt;- tidyped(big_family_size_ped,cand=cand_2007_G8_labels)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in checkped(ped, addgen): Blank, Zero, asterisk, or NA are read as
## a missing parent in the sire column of the pedigree.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in checkped(ped, addgen): Blank, Zero, asterisk, or NA are read as
## a missing parent in the dam column of the pedigree.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 利用suppressMessages，禁止输出提示信息
suppressMessages(visped(cand_2007_G8_tidy_ped,compact = TRUE, outline=TRUE, showgraph = TRUE, file=&amp;quot;doc/bigfullsibped.pdf&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-09-24-the-first-package-vispedigree-0-1_files/figure-html/bigfullsibped-1.png&#34; width=&#34;3600&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;a id=&#34;4.4&#34;&gt;4.4 应用场景&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;a id=&#34;4.4.1&#34;&gt;4.4.1 追踪个体的奠基者情况&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;选择育种的过程，实际上就是将分散在多个奠基者个体中的有利基因，通过连续不断的多代交配设计，富集到后代个体中的一个过程。它背后的支持理论，就是大家熟知的微效多基因假说。&lt;/p&gt;
&lt;p&gt;我们选择deep_ped数据集中的一尾个体“J110550G”，可视化它的系谱。pdf系谱图见&lt;a href=&#34;/post/doc/J110550Gped.pdf&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;suppressWarnings(J110550G_ped &amp;lt;- tidyped(deep_ped,cand=&amp;quot;J110550G&amp;quot;))
suppressMessages(visped(J110550G_ped,showgraph = TRUE,file=&amp;quot;doc/J110550Gped.pdf&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-09-24-the-first-package-vispedigree-0-1_files/figure-html/pedofoneind-1.png&#34; width=&#34;6000&#34; /&gt;
从上图中可以看出，J110550G个体的奠基者个体（没有亲本）数量为71个，这表示该个体富集了分散在上述奠基者个体的多个有利基因，因此育种目标性状才会表现更加优良。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;a id=&#34;4.4.2&#34;&gt;4.4.2 观察配种方案中不同家系贡献个体情况&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;当利用最佳贡献理论进行优化配种时，每个家系贡献的个体数量是不一致，综合选择指数高的家系，贡献更多的个体。通过可视化系谱，可以直观地查看不同家系的贡献比例。&lt;/p&gt;
&lt;p&gt;下边代码，将展示核心育种群2007年出生的106个家系的亲本组成情况。注意在tidyped函数中设置tracegen=2，只展示父母和祖父母两个世代。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  suppressWarnings(
    cand_2007_G8_tidy_ped_ancestor_2 &amp;lt;-
    tidyped(
    big_family_size_ped,
    cand = cand_2007_G8_labels,
    trace = &amp;quot;up&amp;quot;,
    tracegen = 2)
  )
  sire_label &amp;lt;-
  unique(cand_2007_G8_tidy_ped_ancestor_2[Ind %in% cand_2007_G8_labels,
                                          Sire])
  dam_label &amp;lt;-
  unique(cand_2007_G8_tidy_ped_ancestor_2[Ind %in% cand_2007_G8_labels,
                                          Dam])
  sire_dam_label &amp;lt;- unique(c(sire_label, dam_label))
  sire_dam_label &amp;lt;- sire_dam_label[!is.na(sire_dam_label)]
  sire_dam_ped &amp;lt;-
  cand_2007_G8_tidy_ped_ancestor_2[Ind %in% sire_dam_label]
  sire_dam_ped &amp;lt;- sire_dam_ped[, FamilyID := paste(Sire, Dam, sep = &amp;quot;&amp;quot;)]
  family_size &amp;lt;- sire_dam_ped[, .N, by = c(&amp;quot;FamilyID&amp;quot;)]
  fullsib_family_label &amp;lt;- unique(sire_dam_ped$FamilyID)
  suppressMessages(
    visped(
    cand_2007_G8_tidy_ped_ancestor_2,
    compact = TRUE,
    outline = TRUE,
    showgraph = TRUE
    )
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-09-24-the-first-package-vispedigree-0-1_files/figure-html/optiMate-1.png&#34; width=&#34;3600&#34; /&gt;
上图中，底部为核心群106个家系，中间为其父母本个体，顶部为祖父母个体。可以看出，父母本共计由80个父本、106个母本组成。从上图中可以看出，父母本来自54个全同胞家系，由于采用了最佳贡献理论配种，其中25个父母本来自两个全同胞家系，约占父母本总数的13.44%。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Identiﬁcation of SNPs Associated With Residual Feed Intake From the Muscle of Litopenaeus Vannamei Using Bulk Segregant RNA Seq</title>
      <link>/publication/identification-of-snps-associated-with-residual-feed-intake-from-the-muscle-of-litopenaeus-vannamei-using-bulk-segregant-rna-seq/</link>
      <pubDate>Thu, 09 Aug 2018 15:27:47 +0800</pubDate>
      
      <guid>/publication/identification-of-snps-associated-with-residual-feed-intake-from-the-muscle-of-litopenaeus-vannamei-using-bulk-segregant-rna-seq/</guid>
      <description></description>
    </item>
    
    <item>
      <title>plotting pedigree using DiagrammeR and visNetwork packages</title>
      <link>/post/plot-pedigree-using-diagrammer-package/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/plot-pedigree-using-diagrammer-package/</guid>
      <description>&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/vis/vis.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/vis/vis.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/visNetwork-binding/visNetwork.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/viz/viz.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/DiagrammeR-styles/styles.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/grViz-binding/grViz.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/rich-iannone/DiagrammeR&#34;&gt;DiagrammeR&lt;/a&gt;包提供了一个可以直接读取pedigree数据，画图的功能。这个包的问题是，没有一个使用指南，自己摸索起来很麻烦。&lt;/p&gt;
&lt;p&gt;从实际测试结果来看，&lt;a href=&#34;http://datastorm-open.github.io/visNetwork/&#34;&gt;visNetwork&lt;/a&gt;包更加有用，有详细的使用指南，可以跟shiny结合，能够在网页上点击，这是我比较感兴趣的。&lt;/p&gt;
&lt;div id=&#34;diagrammerrvisnetwork&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.加载DiagrammerR和visNetwork包&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rm(list = ls())
require(DiagrammeR)
require(visNetwork)
require(data.table)
require(optiSel)
knitr::opts_knit$set(fig.height=12, fig.width=12)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.读取系谱数据&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ped_1 &amp;lt;-  fread(file=&amp;quot;datasets/ped1.csv&amp;quot;)
#设置Sire和Dam列中0为NA
ped_1[Sire==&amp;quot;0&amp;quot;,Sire:=NA]
ped_1[Dam==&amp;quot;0&amp;quot;,Dam:=NA]
#利用optisel包中的系谱处理函数，对系谱进行预处理，如果包括性别，列表头用Sex表示
#addNum=TRUE,生成一个数字化系谱，下边两个包DiagrammeR和visNetwork要求节点从1开始连续编码
ped_1_pre &amp;lt;-  as.data.table(prePed(ped_1,addNum = TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;3.生成节点和边数据&lt;/h2&gt;
&lt;p&gt;DiagrammeR和visNetwork包需要两种类型数据：节点数据以及edge数据。后者表示节点的走向。&lt;/p&gt;
&lt;p&gt;节点数据：id需要连续从1开始编号，label表示该节点的名称。预留一个sex字段，可以据此字段设置雌雄个体不同的形状、颜色等信息。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;node_1 &amp;lt;- data.table(id=ped_1_pre$numIndiv,label=ped_1_pre$Indiv,sex=ped_1_pre$Sex)
edge_1_sire &amp;lt;- ped_1_pre[,c(&amp;quot;numIndiv&amp;quot;,&amp;quot;numSire&amp;quot;)]
edge_1_dam &amp;lt;- ped_1_pre[,c(&amp;quot;numIndiv&amp;quot;,&amp;quot;numDam&amp;quot;)]
setnames(edge_1_sire,c(&amp;quot;numIndiv&amp;quot;,&amp;quot;numSire&amp;quot;),c(&amp;quot;from&amp;quot;,&amp;quot;to&amp;quot;))
setnames(edge_1_dam,c(&amp;quot;numIndiv&amp;quot;,&amp;quot;numDam&amp;quot;),c(&amp;quot;from&amp;quot;,&amp;quot;to&amp;quot;))
edge_1 &amp;lt;- rbind(edge_1_sire,edge_1_dam)
#edge_1中数据来自optiSel包prePed函数生成的数字系谱，其中默认缺失的个体编号为0，需要处理为NA
edge_1[to==0,to:=NA]
#排序
edge_1[order(from)] &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      from to
##   1:    1 NA
##   2:    1 NA
##   3:    2 NA
##   4:    2 NA
##   5:    3 NA
##  ---        
## 116:   58 56
## 117:   59 54
## 118:   59 55
## 119:   60 59
## 120:   60 58&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以下4-6主要是针对DiagrammeR包的操作。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;4.生成空的图形&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;i_graph_1 &amp;lt;-  create_graph()
i_graph_1 %&amp;gt;% is_graph_empty()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;5.增加节点数据&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;i_graph_1 &amp;lt;- i_graph_1 %&amp;gt;% add_nodes_from_table(table = node_1,label_col = label)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;6.增加边数据&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;i_graph_1 &amp;lt;- i_graph_1 %&amp;gt;% add_edges_from_table(table = edge_1,from_col = from,to_col = to,from_to_map = id_external)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;6. 绘图&lt;/h2&gt;
&lt;p&gt;支持两种图形输出引擎：&lt;/p&gt;
&lt;p&gt;第一种采用的是visNetwork。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;i_graph_1 %&amp;gt;% render_graph(output = &amp;quot;visNetwork&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;visNetwork html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;nodes&#34;:{&#34;id&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;group&#34;:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],&#34;label&#34;:[&#34;G500A475&#34;,&#34;G500A300&#34;,&#34;G500A511&#34;,&#34;G500A482&#34;,&#34;G500A664&#34;,&#34;G500A848&#34;,&#34;G500A938&#34;,&#34;G500C583&#34;,&#34;G500A990&#34;,&#34;G500C591&#34;,&#34;G500A256&#34;,&#34;G500A060&#34;,&#34;G500C317&#34;,&#34;G500C561&#34;,&#34;G500C612&#34;,&#34;G500C355&#34;,&#34;G500A004&#34;,&#34;G500A839&#34;,&#34;G500A563&#34;,&#34;G500A624&#34;,&#34;G500A167&#34;,&#34;G500A380&#34;,&#34;G500A808&#34;,&#34;G500C231&#34;,&#34;G500C185&#34;,&#34;G500A843&#34;,&#34;G500C423&#34;,&#34;G500C450&#34;,&#34;G500C032&#34;,&#34;G600B339&#34;,&#34;G600C802&#34;,&#34;G600C929&#34;,&#34;G600D971&#34;,&#34;G600E539&#34;,&#34;G600E852&#34;,&#34;G600F266&#34;,&#34;G600H419&#34;,&#34;G600H604&#34;,&#34;G600I438&#34;,&#34;G600I975&#34;,&#34;G600J134&#34;,&#34;G600J576&#34;,&#34;G600J858&#34;,&#34;G600K462&#34;,&#34;G600A417&#34;,&#34;G700A411&#34;,&#34;G700A903&#34;,&#34;G700B434&#34;,&#34;G700C161&#34;,&#34;G700C808&#34;,&#34;G700D544&#34;,&#34;G700F588&#34;,&#34;G700G965&#34;,&#34;G800B620&#34;,&#34;G800B771&#34;,&#34;G800D697&#34;,&#34;G800L886&#34;,&#34;G900E185&#34;,&#34;G900B326&#34;,&#34;G010D804&#34;],&#34;id_external&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;sex&#34;:[&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;]},&#34;edges&#34;:{&#34;id&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],&#34;from&#34;:[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;to&#34;:[1,2,3,4,5,6,1,7,8,9,10,11,7,12,13,14,33,34,31,42,40,30,32,39,49,53,47,50,57,54,59,15,16,17,18,19,20,15,21,22,23,24,25,26,27,28,29,41,44,37,35,36,43,45,38,46,51,48,52,56,55,58],&#34;label&#34;:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},&#34;nodesToDataframe&#34;:true,&#34;edgesToDataframe&#34;:true,&#34;options&#34;:{&#34;width&#34;:&#34;100%&#34;,&#34;height&#34;:&#34;100%&#34;,&#34;nodes&#34;:{&#34;shape&#34;:&#34;dot&#34;},&#34;manipulation&#34;:{&#34;enabled&#34;:false},&#34;edges&#34;:{&#34;arrows&#34;:{&#34;to&#34;:{&#34;enabled&#34;:true,&#34;scaleFactor&#34;:1}}},&#34;physics&#34;:{&#34;stabilization&#34;:{&#34;enabled&#34;:true,&#34;onlyDynamicEdges&#34;:false,&#34;fit&#34;:true}},&#34;layout&#34;:{&#34;improvedLayout&#34;:true}},&#34;groups&#34;:null,&#34;width&#34;:null,&#34;height&#34;:null,&#34;idselection&#34;:{&#34;enabled&#34;:false},&#34;byselection&#34;:{&#34;enabled&#34;:false},&#34;main&#34;:null,&#34;submain&#34;:null,&#34;footer&#34;:null,&#34;background&#34;:&#34;rgba(0, 0, 0, 0)&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;第二种graphviz，是默认的输出引擎。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;i_graph_1 %&amp;gt;% render_graph(output = &amp;quot;graph&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;grViz html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;diagram&#34;:&#34;digraph {\n\ngraph [layout = \&#34;neato\&#34;,\n       outputorder = \&#34;edgesfirst\&#34;,\n       bgcolor = \&#34;white\&#34;]\n\nnode [fontname = \&#34;Helvetica\&#34;,\n      fontsize = \&#34;10\&#34;,\n      shape = \&#34;circle\&#34;,\n      fixedsize = \&#34;true\&#34;,\n      width = \&#34;0.5\&#34;,\n      style = \&#34;filled\&#34;,\n      fillcolor = \&#34;aliceblue\&#34;,\n      color = \&#34;gray70\&#34;,\n      fontcolor = \&#34;gray50\&#34;]\n\nedge [fontname = \&#34;Helvetica\&#34;,\n     fontsize = \&#34;8\&#34;,\n     len = \&#34;1.5\&#34;,\n     color = \&#34;gray80\&#34;,\n     arrowsize = \&#34;0.5\&#34;]\n\n  \&#34;1\&#34; [label = \&#34;G500A475\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;2\&#34; [label = \&#34;G500A300\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;3\&#34; [label = \&#34;G500A511\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;4\&#34; [label = \&#34;G500A482\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;5\&#34; [label = \&#34;G500A664\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;6\&#34; [label = \&#34;G500A848\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;7\&#34; [label = \&#34;G500A938\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;8\&#34; [label = \&#34;G500C583\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;9\&#34; [label = \&#34;G500A990\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;10\&#34; [label = \&#34;G500C591\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;11\&#34; [label = \&#34;G500A256\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;12\&#34; [label = \&#34;G500A060\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;13\&#34; [label = \&#34;G500C317\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;14\&#34; [label = \&#34;G500C561\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;15\&#34; [label = \&#34;G500C612\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;16\&#34; [label = \&#34;G500C355\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;17\&#34; [label = \&#34;G500A004\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;18\&#34; [label = \&#34;G500A839\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;19\&#34; [label = \&#34;G500A563\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;20\&#34; [label = \&#34;G500A624\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;21\&#34; [label = \&#34;G500A167\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;22\&#34; [label = \&#34;G500A380\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;23\&#34; [label = \&#34;G500A808\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;24\&#34; [label = \&#34;G500C231\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;25\&#34; [label = \&#34;G500C185\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;26\&#34; [label = \&#34;G500A843\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;27\&#34; [label = \&#34;G500C423\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;28\&#34; [label = \&#34;G500C450\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;29\&#34; [label = \&#34;G500C032\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;30\&#34; [label = \&#34;G600B339\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;31\&#34; [label = \&#34;G600C802\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;32\&#34; [label = \&#34;G600C929\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;33\&#34; [label = \&#34;G600D971\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;34\&#34; [label = \&#34;G600E539\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;35\&#34; [label = \&#34;G600E852\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;36\&#34; [label = \&#34;G600F266\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;37\&#34; [label = \&#34;G600H419\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;38\&#34; [label = \&#34;G600H604\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;39\&#34; [label = \&#34;G600I438\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;40\&#34; [label = \&#34;G600I975\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;41\&#34; [label = \&#34;G600J134\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;42\&#34; [label = \&#34;G600J576\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;43\&#34; [label = \&#34;G600J858\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;44\&#34; [label = \&#34;G600K462\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;45\&#34; [label = \&#34;G600A417\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;46\&#34; [label = \&#34;G700A411\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;47\&#34; [label = \&#34;G700A903\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;48\&#34; [label = \&#34;G700B434\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;49\&#34; [label = \&#34;G700C161\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;50\&#34; [label = \&#34;G700C808\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;51\&#34; [label = \&#34;G700D544\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;52\&#34; [label = \&#34;G700F588\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;53\&#34; [label = \&#34;G700G965\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;54\&#34; [label = \&#34;G800B620\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;55\&#34; [label = \&#34;G800B771\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;56\&#34; [label = \&#34;G800D697\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;57\&#34; [label = \&#34;G800L886\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;58\&#34; [label = \&#34;G900E185\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;59\&#34; [label = \&#34;G900B326\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;60\&#34; [label = \&#34;G010D804\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;] \n  \&#34;30\&#34;-&gt;\&#34;1\&#34; \n  \&#34;31\&#34;-&gt;\&#34;2\&#34; \n  \&#34;32\&#34;-&gt;\&#34;3\&#34; \n  \&#34;33\&#34;-&gt;\&#34;4\&#34; \n  \&#34;34\&#34;-&gt;\&#34;5\&#34; \n  \&#34;35\&#34;-&gt;\&#34;6\&#34; \n  \&#34;36\&#34;-&gt;\&#34;1\&#34; \n  \&#34;37\&#34;-&gt;\&#34;7\&#34; \n  \&#34;38\&#34;-&gt;\&#34;8\&#34; \n  \&#34;39\&#34;-&gt;\&#34;9\&#34; \n  \&#34;40\&#34;-&gt;\&#34;10\&#34; \n  \&#34;41\&#34;-&gt;\&#34;11\&#34; \n  \&#34;42\&#34;-&gt;\&#34;7\&#34; \n  \&#34;43\&#34;-&gt;\&#34;12\&#34; \n  \&#34;44\&#34;-&gt;\&#34;13\&#34; \n  \&#34;45\&#34;-&gt;\&#34;14\&#34; \n  \&#34;46\&#34;-&gt;\&#34;33\&#34; \n  \&#34;47\&#34;-&gt;\&#34;34\&#34; \n  \&#34;48\&#34;-&gt;\&#34;31\&#34; \n  \&#34;49\&#34;-&gt;\&#34;42\&#34; \n  \&#34;50\&#34;-&gt;\&#34;40\&#34; \n  \&#34;51\&#34;-&gt;\&#34;30\&#34; \n  \&#34;52\&#34;-&gt;\&#34;32\&#34; \n  \&#34;53\&#34;-&gt;\&#34;39\&#34; \n  \&#34;54\&#34;-&gt;\&#34;49\&#34; \n  \&#34;55\&#34;-&gt;\&#34;53\&#34; \n  \&#34;56\&#34;-&gt;\&#34;47\&#34; \n  \&#34;57\&#34;-&gt;\&#34;50\&#34; \n  \&#34;58\&#34;-&gt;\&#34;57\&#34; \n  \&#34;59\&#34;-&gt;\&#34;54\&#34; \n  \&#34;60\&#34;-&gt;\&#34;59\&#34; \n  \&#34;30\&#34;-&gt;\&#34;15\&#34; \n  \&#34;31\&#34;-&gt;\&#34;16\&#34; \n  \&#34;32\&#34;-&gt;\&#34;17\&#34; \n  \&#34;33\&#34;-&gt;\&#34;18\&#34; \n  \&#34;34\&#34;-&gt;\&#34;19\&#34; \n  \&#34;35\&#34;-&gt;\&#34;20\&#34; \n  \&#34;36\&#34;-&gt;\&#34;15\&#34; \n  \&#34;37\&#34;-&gt;\&#34;21\&#34; \n  \&#34;38\&#34;-&gt;\&#34;22\&#34; \n  \&#34;39\&#34;-&gt;\&#34;23\&#34; \n  \&#34;40\&#34;-&gt;\&#34;24\&#34; \n  \&#34;41\&#34;-&gt;\&#34;25\&#34; \n  \&#34;42\&#34;-&gt;\&#34;26\&#34; \n  \&#34;43\&#34;-&gt;\&#34;27\&#34; \n  \&#34;44\&#34;-&gt;\&#34;28\&#34; \n  \&#34;45\&#34;-&gt;\&#34;29\&#34; \n  \&#34;46\&#34;-&gt;\&#34;41\&#34; \n  \&#34;47\&#34;-&gt;\&#34;44\&#34; \n  \&#34;48\&#34;-&gt;\&#34;37\&#34; \n  \&#34;49\&#34;-&gt;\&#34;35\&#34; \n  \&#34;50\&#34;-&gt;\&#34;36\&#34; \n  \&#34;51\&#34;-&gt;\&#34;43\&#34; \n  \&#34;52\&#34;-&gt;\&#34;45\&#34; \n  \&#34;53\&#34;-&gt;\&#34;38\&#34; \n  \&#34;54\&#34;-&gt;\&#34;46\&#34; \n  \&#34;55\&#34;-&gt;\&#34;51\&#34; \n  \&#34;56\&#34;-&gt;\&#34;48\&#34; \n  \&#34;57\&#34;-&gt;\&#34;52\&#34; \n  \&#34;58\&#34;-&gt;\&#34;56\&#34; \n  \&#34;59\&#34;-&gt;\&#34;55\&#34; \n  \&#34;60\&#34;-&gt;\&#34;58\&#34; \n}&#34;,&#34;config&#34;:{&#34;engine&#34;:&#34;dot&#34;,&#34;options&#34;:null}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;从上边两张图可以看出，生成的图形，并不符合我们的要求。理想的系谱树，应该是树状的。&lt;/p&gt;
&lt;p&gt;因此尝试设定布局参数为tree。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;i_graph_1 %&amp;gt;% render_graph(layout = &amp;quot;tree&amp;quot;,output = &amp;quot;graph&amp;quot;,width=1200,height=800)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-3&#34; style=&#34;width:1200px;height:800px;&#34; class=&#34;grViz html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-3&#34;&gt;{&#34;x&#34;:{&#34;diagram&#34;:&#34;digraph {\n\ngraph [layout = \&#34;neato\&#34;,\n       outputorder = \&#34;edgesfirst\&#34;,\n       bgcolor = \&#34;white\&#34;]\n\nnode [fontname = \&#34;Helvetica\&#34;,\n      fontsize = \&#34;10\&#34;,\n      shape = \&#34;circle\&#34;,\n      fixedsize = \&#34;true\&#34;,\n      width = \&#34;0.5\&#34;,\n      style = \&#34;filled\&#34;,\n      fillcolor = \&#34;aliceblue\&#34;,\n      color = \&#34;gray70\&#34;,\n      fontcolor = \&#34;gray50\&#34;]\n\nedge [fontname = \&#34;Helvetica\&#34;,\n     fontsize = \&#34;8\&#34;,\n     len = \&#34;1.5\&#34;,\n     color = \&#34;gray80\&#34;,\n     arrowsize = \&#34;0.5\&#34;]\n\n  \&#34;1\&#34; [label = \&#34;G500A475\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;20,1!\&#34;] \n  \&#34;2\&#34; [label = \&#34;G500A300\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;4.5,1!\&#34;] \n  \&#34;3\&#34; [label = \&#34;G500A511\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;6.5,1!\&#34;] \n  \&#34;4\&#34; [label = \&#34;G500A482\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;18,1!\&#34;] \n  \&#34;5\&#34; [label = \&#34;G500A664\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;2.5,1!\&#34;] \n  \&#34;6\&#34; [label = \&#34;G500A848\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;22,1!\&#34;] \n  \&#34;7\&#34; [label = \&#34;G500A938\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;11.5,1!\&#34;] \n  \&#34;8\&#34; [label = \&#34;G500C583\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;26,1!\&#34;] \n  \&#34;9\&#34; [label = \&#34;G500A990\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;28,1!\&#34;] \n  \&#34;10\&#34; [label = \&#34;G500C591\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;13,1!\&#34;] \n  \&#34;11\&#34; [label = \&#34;G500A256\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;15,1!\&#34;] \n  \&#34;12\&#34; [label = \&#34;G500A060\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;24,1!\&#34;] \n  \&#34;13\&#34; [label = \&#34;G500C317\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;0.5,1!\&#34;] \n  \&#34;14\&#34; [label = \&#34;G500C561\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;8.5,1!\&#34;] \n  \&#34;15\&#34; [label = \&#34;G500C612\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;19,1!\&#34;] \n  \&#34;16\&#34; [label = \&#34;G500C355\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;3.5,1!\&#34;] \n  \&#34;17\&#34; [label = \&#34;G500A004\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;7.5,1!\&#34;] \n  \&#34;18\&#34; [label = \&#34;G500A839\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;17,1!\&#34;] \n  \&#34;19\&#34; [label = \&#34;G500A563\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;1.5,1!\&#34;] \n  \&#34;20\&#34; [label = \&#34;G500A624\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;23,1!\&#34;] \n  \&#34;21\&#34; [label = \&#34;G500A167\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;5.5,1!\&#34;] \n  \&#34;22\&#34; [label = \&#34;G500A380\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;27,1!\&#34;] \n  \&#34;23\&#34; [label = \&#34;G500A808\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;29,1!\&#34;] \n  \&#34;24\&#34; [label = \&#34;G500C231\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;14,1!\&#34;] \n  \&#34;25\&#34; [label = \&#34;G500C185\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;16,1!\&#34;] \n  \&#34;26\&#34; [label = \&#34;G500A843\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;21,1!\&#34;] \n  \&#34;27\&#34; [label = \&#34;G500C423\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;25,1!\&#34;] \n  \&#34;28\&#34; [label = \&#34;G500C450\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;-0.5,1!\&#34;] \n  \&#34;29\&#34; [label = \&#34;G500C032\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;9.5,1!\&#34;] \n  \&#34;30\&#34; [label = \&#34;G600B339\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;21,2!\&#34;] \n  \&#34;31\&#34; [label = \&#34;G600C802\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;4,2!\&#34;] \n  \&#34;32\&#34; [label = \&#34;G600C929\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;6,2!\&#34;] \n  \&#34;33\&#34; [label = \&#34;G600D971\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;19,2!\&#34;] \n  \&#34;34\&#34; [label = \&#34;G600E539\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;2,2!\&#34;] \n  \&#34;35\&#34; [label = \&#34;G600E852\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;23,2!\&#34;] \n  \&#34;36\&#34; [label = \&#34;G600F266\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;20,2!\&#34;] \n  \&#34;37\&#34; [label = \&#34;G600H419\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;8,2!\&#34;] \n  \&#34;38\&#34; [label = \&#34;G600H604\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;27,2!\&#34;] \n  \&#34;39\&#34; [label = \&#34;G600I438\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;29,2!\&#34;] \n  \&#34;40\&#34; [label = \&#34;G600I975\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;11,2!\&#34;] \n  \&#34;41\&#34; [label = \&#34;G600J134\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;12.5,2!\&#34;] \n  \&#34;42\&#34; [label = \&#34;G600J576\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;15.5,2!\&#34;] \n  \&#34;43\&#34; [label = \&#34;G600J858\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;25,2!\&#34;] \n  \&#34;44\&#34; [label = \&#34;G600K462\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;0,2!\&#34;] \n  \&#34;45\&#34; [label = \&#34;G600A417\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;10,2!\&#34;] \n  \&#34;46\&#34; [label = \&#34;G700A411\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;16.5,3!\&#34;] \n  \&#34;47\&#34; [label = \&#34;G700A903\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;0.5,3!\&#34;] \n  \&#34;48\&#34; [label = \&#34;G700B434\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;4.5,3!\&#34;] \n  \&#34;49\&#34; [label = \&#34;G700C161\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;23,3!\&#34;] \n  \&#34;50\&#34; [label = \&#34;G700C808\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;20,3!\&#34;] \n  \&#34;51\&#34; [label = \&#34;G700D544\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;25,3!\&#34;] \n  \&#34;52\&#34; [label = \&#34;G700F588\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;8,3!\&#34;] \n  \&#34;53\&#34; [label = \&#34;G700G965\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;29,3!\&#34;] \n  \&#34;54\&#34; [label = \&#34;G800B620\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;19,4!\&#34;] \n  \&#34;55\&#34; [label = \&#34;G800B771\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;28,4!\&#34;] \n  \&#34;56\&#34; [label = \&#34;G800D697\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;2.5,4!\&#34;] \n  \&#34;57\&#34; [label = \&#34;G800L886\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;13,4!\&#34;] \n  \&#34;58\&#34; [label = \&#34;G900E185\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;9.5,5!\&#34;] \n  \&#34;59\&#34; [label = \&#34;G900B326\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;22,5!\&#34;] \n  \&#34;60\&#34; [label = \&#34;G010D804\&#34;, fillcolor = \&#34;#F0F8FF\&#34;, fontcolor = \&#34;#000000\&#34;, pos = \&#34;14.5,6!\&#34;] \n  \&#34;30\&#34;-&gt;\&#34;1\&#34; \n  \&#34;31\&#34;-&gt;\&#34;2\&#34; \n  \&#34;32\&#34;-&gt;\&#34;3\&#34; \n  \&#34;33\&#34;-&gt;\&#34;4\&#34; \n  \&#34;34\&#34;-&gt;\&#34;5\&#34; \n  \&#34;35\&#34;-&gt;\&#34;6\&#34; \n  \&#34;36\&#34;-&gt;\&#34;1\&#34; \n  \&#34;37\&#34;-&gt;\&#34;7\&#34; \n  \&#34;38\&#34;-&gt;\&#34;8\&#34; \n  \&#34;39\&#34;-&gt;\&#34;9\&#34; \n  \&#34;40\&#34;-&gt;\&#34;10\&#34; \n  \&#34;41\&#34;-&gt;\&#34;11\&#34; \n  \&#34;42\&#34;-&gt;\&#34;7\&#34; \n  \&#34;43\&#34;-&gt;\&#34;12\&#34; \n  \&#34;44\&#34;-&gt;\&#34;13\&#34; \n  \&#34;45\&#34;-&gt;\&#34;14\&#34; \n  \&#34;46\&#34;-&gt;\&#34;33\&#34; \n  \&#34;47\&#34;-&gt;\&#34;34\&#34; \n  \&#34;48\&#34;-&gt;\&#34;31\&#34; \n  \&#34;49\&#34;-&gt;\&#34;42\&#34; \n  \&#34;50\&#34;-&gt;\&#34;40\&#34; \n  \&#34;51\&#34;-&gt;\&#34;30\&#34; \n  \&#34;52\&#34;-&gt;\&#34;32\&#34; \n  \&#34;53\&#34;-&gt;\&#34;39\&#34; \n  \&#34;54\&#34;-&gt;\&#34;49\&#34; \n  \&#34;55\&#34;-&gt;\&#34;53\&#34; \n  \&#34;56\&#34;-&gt;\&#34;47\&#34; \n  \&#34;57\&#34;-&gt;\&#34;50\&#34; \n  \&#34;58\&#34;-&gt;\&#34;57\&#34; \n  \&#34;59\&#34;-&gt;\&#34;54\&#34; \n  \&#34;60\&#34;-&gt;\&#34;59\&#34; \n  \&#34;30\&#34;-&gt;\&#34;15\&#34; \n  \&#34;31\&#34;-&gt;\&#34;16\&#34; \n  \&#34;32\&#34;-&gt;\&#34;17\&#34; \n  \&#34;33\&#34;-&gt;\&#34;18\&#34; \n  \&#34;34\&#34;-&gt;\&#34;19\&#34; \n  \&#34;35\&#34;-&gt;\&#34;20\&#34; \n  \&#34;36\&#34;-&gt;\&#34;15\&#34; \n  \&#34;37\&#34;-&gt;\&#34;21\&#34; \n  \&#34;38\&#34;-&gt;\&#34;22\&#34; \n  \&#34;39\&#34;-&gt;\&#34;23\&#34; \n  \&#34;40\&#34;-&gt;\&#34;24\&#34; \n  \&#34;41\&#34;-&gt;\&#34;25\&#34; \n  \&#34;42\&#34;-&gt;\&#34;26\&#34; \n  \&#34;43\&#34;-&gt;\&#34;27\&#34; \n  \&#34;44\&#34;-&gt;\&#34;28\&#34; \n  \&#34;45\&#34;-&gt;\&#34;29\&#34; \n  \&#34;46\&#34;-&gt;\&#34;41\&#34; \n  \&#34;47\&#34;-&gt;\&#34;44\&#34; \n  \&#34;48\&#34;-&gt;\&#34;37\&#34; \n  \&#34;49\&#34;-&gt;\&#34;35\&#34; \n  \&#34;50\&#34;-&gt;\&#34;36\&#34; \n  \&#34;51\&#34;-&gt;\&#34;43\&#34; \n  \&#34;52\&#34;-&gt;\&#34;45\&#34; \n  \&#34;53\&#34;-&gt;\&#34;38\&#34; \n  \&#34;54\&#34;-&gt;\&#34;46\&#34; \n  \&#34;55\&#34;-&gt;\&#34;51\&#34; \n  \&#34;56\&#34;-&gt;\&#34;48\&#34; \n  \&#34;57\&#34;-&gt;\&#34;52\&#34; \n  \&#34;58\&#34;-&gt;\&#34;56\&#34; \n  \&#34;59\&#34;-&gt;\&#34;55\&#34; \n  \&#34;60\&#34;-&gt;\&#34;58\&#34; \n}&#34;,&#34;config&#34;:{&#34;engine&#34;:&#34;dot&#34;,&#34;options&#34;:null}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;但是也存在一个问题，没有找到如何控制输出树状图大小，以及世代间距离的方法。&lt;/p&gt;
&lt;p&gt;DiagrammeR的文档还不是很完善。没有一个指南，使用这个包很麻烦。&lt;/p&gt;
&lt;p&gt;补充：其实是有一个使用指南的，在&lt;a href=&#34;https://rich-iannone.github.io/DiagrammeR/docs.html&#34;&gt;这里&lt;/a&gt;，描述的很详细。&lt;/p&gt;
&lt;p&gt;因此尝试直接利用visNetwork包来作图。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;visnetwork&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;7.直接利用visNetwork包来绘图&lt;/h2&gt;
&lt;p&gt;visNetwork做出来的图，很炫。是动态的，可以用鼠标来拖动每个节点。&lt;/p&gt;
&lt;p&gt;其中有几个参数很重要：&lt;/p&gt;
&lt;p&gt;direction表示图形的绘制方向，DU表示从下到上。&lt;/p&gt;
&lt;p&gt;sortMethod表示如何排序，directed表示按照from to的方式排序。&lt;/p&gt;
&lt;p&gt;levelSeparation 表示不同层间的距离，这个需要手动尝试。如果不设置，图会很小。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;visNetwork(node_1,edge_1) %&amp;gt;%  visEdges(arrows = &amp;quot;to&amp;quot;)  %&amp;gt;% visHierarchicalLayout(direction = &amp;quot;DU&amp;quot;,sortMethod = &amp;quot;directed&amp;quot;,levelSeparation = 250, nodeSpacing = 150)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-4&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;visNetwork html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-4&#34;&gt;{&#34;x&#34;:{&#34;nodes&#34;:{&#34;id&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;label&#34;:[&#34;G500A475&#34;,&#34;G500A300&#34;,&#34;G500A511&#34;,&#34;G500A482&#34;,&#34;G500A664&#34;,&#34;G500A848&#34;,&#34;G500A938&#34;,&#34;G500C583&#34;,&#34;G500A990&#34;,&#34;G500C591&#34;,&#34;G500A256&#34;,&#34;G500A060&#34;,&#34;G500C317&#34;,&#34;G500C561&#34;,&#34;G500C612&#34;,&#34;G500C355&#34;,&#34;G500A004&#34;,&#34;G500A839&#34;,&#34;G500A563&#34;,&#34;G500A624&#34;,&#34;G500A167&#34;,&#34;G500A380&#34;,&#34;G500A808&#34;,&#34;G500C231&#34;,&#34;G500C185&#34;,&#34;G500A843&#34;,&#34;G500C423&#34;,&#34;G500C450&#34;,&#34;G500C032&#34;,&#34;G600B339&#34;,&#34;G600C802&#34;,&#34;G600C929&#34;,&#34;G600D971&#34;,&#34;G600E539&#34;,&#34;G600E852&#34;,&#34;G600F266&#34;,&#34;G600H419&#34;,&#34;G600H604&#34;,&#34;G600I438&#34;,&#34;G600I975&#34;,&#34;G600J134&#34;,&#34;G600J576&#34;,&#34;G600J858&#34;,&#34;G600K462&#34;,&#34;G600A417&#34;,&#34;G700A411&#34;,&#34;G700A903&#34;,&#34;G700B434&#34;,&#34;G700C161&#34;,&#34;G700C808&#34;,&#34;G700D544&#34;,&#34;G700F588&#34;,&#34;G700G965&#34;,&#34;G800B620&#34;,&#34;G800B771&#34;,&#34;G800D697&#34;,&#34;G800L886&#34;,&#34;G900E185&#34;,&#34;G900B326&#34;,&#34;G010D804&#34;],&#34;sex&#34;:[&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;]},&#34;edges&#34;:{&#34;from&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;to&#34;:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,2,3,4,5,6,1,7,8,9,10,11,7,12,13,14,33,34,31,42,40,30,32,39,49,53,47,50,57,54,59,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,15,16,17,18,19,20,15,21,22,23,24,25,26,27,28,29,41,44,37,35,36,43,45,38,46,51,48,52,56,55,58]},&#34;nodesToDataframe&#34;:true,&#34;edgesToDataframe&#34;:true,&#34;options&#34;:{&#34;width&#34;:&#34;100%&#34;,&#34;height&#34;:&#34;100%&#34;,&#34;nodes&#34;:{&#34;shape&#34;:&#34;dot&#34;},&#34;manipulation&#34;:{&#34;enabled&#34;:false},&#34;edges&#34;:{&#34;arrows&#34;:&#34;to&#34;},&#34;layout&#34;:{&#34;hierarchical&#34;:{&#34;enabled&#34;:true,&#34;levelSeparation&#34;:250,&#34;nodeSpacing&#34;:150,&#34;direction&#34;:&#34;DU&#34;,&#34;sortMethod&#34;:&#34;directed&#34;}}},&#34;groups&#34;:null,&#34;width&#34;:null,&#34;height&#34;:null,&#34;idselection&#34;:{&#34;enabled&#34;:false},&#34;byselection&#34;:{&#34;enabled&#34;:false},&#34;main&#34;:null,&#34;submain&#34;:null,&#34;footer&#34;:null,&#34;background&#34;:&#34;rgba(0, 0, 0, 0)&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;visnetwork&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;8.visNetwork进阶&lt;/h2&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;8.1 雄性和雌性个体设置不同的形状和颜色&lt;/h3&gt;
&lt;p&gt;雄雌个体节点形状分别设置为square、dot；颜色分别设置为绿色和红色。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;node_1[sex==&amp;quot;male&amp;quot;,shape:=&amp;quot;square&amp;quot;]
node_1[sex==&amp;quot;female&amp;quot;,shape:=&amp;quot;dot&amp;quot;]
node_1[sex==&amp;quot;male&amp;quot;,color:=&amp;quot;#42c58c&amp;quot;]
node_1[sex==&amp;quot;female&amp;quot;,color:=&amp;quot;#e1409b&amp;quot;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第一种配色：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;visNetwork(node_1,edge_1) %&amp;gt;%  visEdges(arrows = &amp;quot;to&amp;quot;)  %&amp;gt;% visHierarchicalLayout(direction = &amp;quot;DU&amp;quot;,sortMethod = &amp;quot;directed&amp;quot;,levelSeparation = 250, nodeSpacing = 150)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-5&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;visNetwork html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-5&#34;&gt;{&#34;x&#34;:{&#34;nodes&#34;:{&#34;id&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;label&#34;:[&#34;G500A475&#34;,&#34;G500A300&#34;,&#34;G500A511&#34;,&#34;G500A482&#34;,&#34;G500A664&#34;,&#34;G500A848&#34;,&#34;G500A938&#34;,&#34;G500C583&#34;,&#34;G500A990&#34;,&#34;G500C591&#34;,&#34;G500A256&#34;,&#34;G500A060&#34;,&#34;G500C317&#34;,&#34;G500C561&#34;,&#34;G500C612&#34;,&#34;G500C355&#34;,&#34;G500A004&#34;,&#34;G500A839&#34;,&#34;G500A563&#34;,&#34;G500A624&#34;,&#34;G500A167&#34;,&#34;G500A380&#34;,&#34;G500A808&#34;,&#34;G500C231&#34;,&#34;G500C185&#34;,&#34;G500A843&#34;,&#34;G500C423&#34;,&#34;G500C450&#34;,&#34;G500C032&#34;,&#34;G600B339&#34;,&#34;G600C802&#34;,&#34;G600C929&#34;,&#34;G600D971&#34;,&#34;G600E539&#34;,&#34;G600E852&#34;,&#34;G600F266&#34;,&#34;G600H419&#34;,&#34;G600H604&#34;,&#34;G600I438&#34;,&#34;G600I975&#34;,&#34;G600J134&#34;,&#34;G600J576&#34;,&#34;G600J858&#34;,&#34;G600K462&#34;,&#34;G600A417&#34;,&#34;G700A411&#34;,&#34;G700A903&#34;,&#34;G700B434&#34;,&#34;G700C161&#34;,&#34;G700C808&#34;,&#34;G700D544&#34;,&#34;G700F588&#34;,&#34;G700G965&#34;,&#34;G800B620&#34;,&#34;G800B771&#34;,&#34;G800D697&#34;,&#34;G800L886&#34;,&#34;G900E185&#34;,&#34;G900B326&#34;,&#34;G010D804&#34;],&#34;sex&#34;:[&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;],&#34;shape&#34;:[&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;],&#34;color&#34;:[&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#e1409b&#34;,&#34;#42c58c&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#42c58c&#34;,&#34;#e1409b&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#42c58c&#34;,&#34;#42c58c&#34;,&#34;#e1409b&#34;,&#34;#e1409b&#34;,&#34;#42c58c&#34;,&#34;#e1409b&#34;,&#34;#42c58c&#34;,&#34;#e1409b&#34;]},&#34;edges&#34;:{&#34;from&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;to&#34;:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,2,3,4,5,6,1,7,8,9,10,11,7,12,13,14,33,34,31,42,40,30,32,39,49,53,47,50,57,54,59,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,15,16,17,18,19,20,15,21,22,23,24,25,26,27,28,29,41,44,37,35,36,43,45,38,46,51,48,52,56,55,58]},&#34;nodesToDataframe&#34;:true,&#34;edgesToDataframe&#34;:true,&#34;options&#34;:{&#34;width&#34;:&#34;100%&#34;,&#34;height&#34;:&#34;100%&#34;,&#34;nodes&#34;:{&#34;shape&#34;:&#34;dot&#34;},&#34;manipulation&#34;:{&#34;enabled&#34;:false},&#34;edges&#34;:{&#34;arrows&#34;:&#34;to&#34;},&#34;layout&#34;:{&#34;hierarchical&#34;:{&#34;enabled&#34;:true,&#34;levelSeparation&#34;:250,&#34;nodeSpacing&#34;:150,&#34;direction&#34;:&#34;DU&#34;,&#34;sortMethod&#34;:&#34;directed&#34;}}},&#34;groups&#34;:null,&#34;width&#34;:null,&#34;height&#34;:null,&#34;idselection&#34;:{&#34;enabled&#34;:false},&#34;byselection&#34;:{&#34;enabled&#34;:false},&#34;main&#34;:null,&#34;submain&#34;:null,&#34;footer&#34;:null,&#34;background&#34;:&#34;rgba(0, 0, 0, 0)&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;第二种配色：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;node_1[sex==&amp;quot;male&amp;quot;,color:=&amp;quot;#119ecc&amp;quot;]
node_1[sex==&amp;quot;female&amp;quot;,color:=&amp;quot;#f4b131&amp;quot;]
visNetwork(node_1,edge_1) %&amp;gt;%  visEdges(arrows = &amp;quot;to&amp;quot;)  %&amp;gt;% visHierarchicalLayout(direction = &amp;quot;DU&amp;quot;,sortMethod = &amp;quot;directed&amp;quot;,levelSeparation = 250, nodeSpacing = 150)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-6&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;visNetwork html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-6&#34;&gt;{&#34;x&#34;:{&#34;nodes&#34;:{&#34;id&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;label&#34;:[&#34;G500A475&#34;,&#34;G500A300&#34;,&#34;G500A511&#34;,&#34;G500A482&#34;,&#34;G500A664&#34;,&#34;G500A848&#34;,&#34;G500A938&#34;,&#34;G500C583&#34;,&#34;G500A990&#34;,&#34;G500C591&#34;,&#34;G500A256&#34;,&#34;G500A060&#34;,&#34;G500C317&#34;,&#34;G500C561&#34;,&#34;G500C612&#34;,&#34;G500C355&#34;,&#34;G500A004&#34;,&#34;G500A839&#34;,&#34;G500A563&#34;,&#34;G500A624&#34;,&#34;G500A167&#34;,&#34;G500A380&#34;,&#34;G500A808&#34;,&#34;G500C231&#34;,&#34;G500C185&#34;,&#34;G500A843&#34;,&#34;G500C423&#34;,&#34;G500C450&#34;,&#34;G500C032&#34;,&#34;G600B339&#34;,&#34;G600C802&#34;,&#34;G600C929&#34;,&#34;G600D971&#34;,&#34;G600E539&#34;,&#34;G600E852&#34;,&#34;G600F266&#34;,&#34;G600H419&#34;,&#34;G600H604&#34;,&#34;G600I438&#34;,&#34;G600I975&#34;,&#34;G600J134&#34;,&#34;G600J576&#34;,&#34;G600J858&#34;,&#34;G600K462&#34;,&#34;G600A417&#34;,&#34;G700A411&#34;,&#34;G700A903&#34;,&#34;G700B434&#34;,&#34;G700C161&#34;,&#34;G700C808&#34;,&#34;G700D544&#34;,&#34;G700F588&#34;,&#34;G700G965&#34;,&#34;G800B620&#34;,&#34;G800B771&#34;,&#34;G800D697&#34;,&#34;G800L886&#34;,&#34;G900E185&#34;,&#34;G900B326&#34;,&#34;G010D804&#34;],&#34;sex&#34;:[&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;],&#34;shape&#34;:[&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;],&#34;color&#34;:[&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#f4b131&#34;,&#34;#119ecc&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#119ecc&#34;,&#34;#f4b131&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#119ecc&#34;,&#34;#f4b131&#34;,&#34;#119ecc&#34;,&#34;#f4b131&#34;]},&#34;edges&#34;:{&#34;from&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;to&#34;:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,2,3,4,5,6,1,7,8,9,10,11,7,12,13,14,33,34,31,42,40,30,32,39,49,53,47,50,57,54,59,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,15,16,17,18,19,20,15,21,22,23,24,25,26,27,28,29,41,44,37,35,36,43,45,38,46,51,48,52,56,55,58]},&#34;nodesToDataframe&#34;:true,&#34;edgesToDataframe&#34;:true,&#34;options&#34;:{&#34;width&#34;:&#34;100%&#34;,&#34;height&#34;:&#34;100%&#34;,&#34;nodes&#34;:{&#34;shape&#34;:&#34;dot&#34;},&#34;manipulation&#34;:{&#34;enabled&#34;:false},&#34;edges&#34;:{&#34;arrows&#34;:&#34;to&#34;},&#34;layout&#34;:{&#34;hierarchical&#34;:{&#34;enabled&#34;:true,&#34;levelSeparation&#34;:250,&#34;nodeSpacing&#34;:150,&#34;direction&#34;:&#34;DU&#34;,&#34;sortMethod&#34;:&#34;directed&#34;}}},&#34;groups&#34;:null,&#34;width&#34;:null,&#34;height&#34;:null,&#34;idselection&#34;:{&#34;enabled&#34;:false},&#34;byselection&#34;:{&#34;enabled&#34;:false},&#34;main&#34;:null,&#34;submain&#34;:null,&#34;footer&#34;:null,&#34;background&#34;:&#34;rgba(0, 0, 0, 0)&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;第二种配色，不用树状：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;node_1[sex==&amp;quot;male&amp;quot;,color:=&amp;quot;#119ecc&amp;quot;]
node_1[sex==&amp;quot;female&amp;quot;,color:=&amp;quot;#f4b131&amp;quot;]
node_1[label==&amp;quot;G010D804&amp;quot;,color:=&amp;quot;red&amp;quot;]
visNetwork(node_1,edge_1) %&amp;gt;%  visEdges(arrows = &amp;quot;to&amp;quot;) %&amp;gt;% visOptions(highlightNearest = list(enabled=TRUE,degree=2))&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-7&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;visNetwork html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-7&#34;&gt;{&#34;x&#34;:{&#34;nodes&#34;:{&#34;id&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;label&#34;:[&#34;G500A475&#34;,&#34;G500A300&#34;,&#34;G500A511&#34;,&#34;G500A482&#34;,&#34;G500A664&#34;,&#34;G500A848&#34;,&#34;G500A938&#34;,&#34;G500C583&#34;,&#34;G500A990&#34;,&#34;G500C591&#34;,&#34;G500A256&#34;,&#34;G500A060&#34;,&#34;G500C317&#34;,&#34;G500C561&#34;,&#34;G500C612&#34;,&#34;G500C355&#34;,&#34;G500A004&#34;,&#34;G500A839&#34;,&#34;G500A563&#34;,&#34;G500A624&#34;,&#34;G500A167&#34;,&#34;G500A380&#34;,&#34;G500A808&#34;,&#34;G500C231&#34;,&#34;G500C185&#34;,&#34;G500A843&#34;,&#34;G500C423&#34;,&#34;G500C450&#34;,&#34;G500C032&#34;,&#34;G600B339&#34;,&#34;G600C802&#34;,&#34;G600C929&#34;,&#34;G600D971&#34;,&#34;G600E539&#34;,&#34;G600E852&#34;,&#34;G600F266&#34;,&#34;G600H419&#34;,&#34;G600H604&#34;,&#34;G600I438&#34;,&#34;G600I975&#34;,&#34;G600J134&#34;,&#34;G600J576&#34;,&#34;G600J858&#34;,&#34;G600K462&#34;,&#34;G600A417&#34;,&#34;G700A411&#34;,&#34;G700A903&#34;,&#34;G700B434&#34;,&#34;G700C161&#34;,&#34;G700C808&#34;,&#34;G700D544&#34;,&#34;G700F588&#34;,&#34;G700G965&#34;,&#34;G800B620&#34;,&#34;G800B771&#34;,&#34;G800D697&#34;,&#34;G800L886&#34;,&#34;G900E185&#34;,&#34;G900B326&#34;,&#34;G010D804&#34;],&#34;sex&#34;:[&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;],&#34;shape&#34;:[&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;],&#34;color&#34;:[&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#f4b131&#34;,&#34;#119ecc&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#119ecc&#34;,&#34;#f4b131&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#119ecc&#34;,&#34;#119ecc&#34;,&#34;#f4b131&#34;,&#34;#f4b131&#34;,&#34;#119ecc&#34;,&#34;#f4b131&#34;,&#34;#119ecc&#34;,&#34;red&#34;]},&#34;edges&#34;:{&#34;from&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;to&#34;:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,2,3,4,5,6,1,7,8,9,10,11,7,12,13,14,33,34,31,42,40,30,32,39,49,53,47,50,57,54,59,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,15,16,17,18,19,20,15,21,22,23,24,25,26,27,28,29,41,44,37,35,36,43,45,38,46,51,48,52,56,55,58]},&#34;nodesToDataframe&#34;:true,&#34;edgesToDataframe&#34;:true,&#34;options&#34;:{&#34;width&#34;:&#34;100%&#34;,&#34;height&#34;:&#34;100%&#34;,&#34;nodes&#34;:{&#34;shape&#34;:&#34;dot&#34;},&#34;manipulation&#34;:{&#34;enabled&#34;:false},&#34;edges&#34;:{&#34;arrows&#34;:&#34;to&#34;}},&#34;groups&#34;:null,&#34;width&#34;:null,&#34;height&#34;:null,&#34;idselection&#34;:{&#34;enabled&#34;:false,&#34;style&#34;:&#34;width: 150px; height: 26px&#34;,&#34;useLabels&#34;:true,&#34;main&#34;:&#34;Select by id&#34;},&#34;byselection&#34;:{&#34;enabled&#34;:false,&#34;style&#34;:&#34;width: 150px; height: 26px&#34;,&#34;multiple&#34;:false,&#34;hideColor&#34;:&#34;rgba(200,200,200,0.5)&#34;},&#34;main&#34;:null,&#34;submain&#34;:null,&#34;footer&#34;:null,&#34;background&#34;:&#34;rgba(0, 0, 0, 0)&#34;,&#34;highlight&#34;:{&#34;enabled&#34;:true,&#34;hoverNearest&#34;:false,&#34;degree&#34;:2,&#34;algorithm&#34;:&#34;all&#34;,&#34;hideColor&#34;:&#34;rgba(200,200,200,0.5)&#34;,&#34;labelOnly&#34;:true},&#34;collapse&#34;:{&#34;enabled&#34;:false,&#34;fit&#34;:false,&#34;resetHighlight&#34;:true,&#34;clusterOptions&#34;:null}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;第三种配色：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;node_1[sex==&amp;quot;male&amp;quot;,color:=&amp;quot;green&amp;quot;]
node_1[sex==&amp;quot;female&amp;quot;,color:=&amp;quot;red&amp;quot;]
visNetwork(node_1,edge_1) %&amp;gt;%  visEdges(arrows = &amp;quot;to&amp;quot;)  %&amp;gt;% visHierarchicalLayout(direction = &amp;quot;DU&amp;quot;,sortMethod = &amp;quot;directed&amp;quot;,levelSeparation = 250, nodeSpacing = 150)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-8&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;visNetwork html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-8&#34;&gt;{&#34;x&#34;:{&#34;nodes&#34;:{&#34;id&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;label&#34;:[&#34;G500A475&#34;,&#34;G500A300&#34;,&#34;G500A511&#34;,&#34;G500A482&#34;,&#34;G500A664&#34;,&#34;G500A848&#34;,&#34;G500A938&#34;,&#34;G500C583&#34;,&#34;G500A990&#34;,&#34;G500C591&#34;,&#34;G500A256&#34;,&#34;G500A060&#34;,&#34;G500C317&#34;,&#34;G500C561&#34;,&#34;G500C612&#34;,&#34;G500C355&#34;,&#34;G500A004&#34;,&#34;G500A839&#34;,&#34;G500A563&#34;,&#34;G500A624&#34;,&#34;G500A167&#34;,&#34;G500A380&#34;,&#34;G500A808&#34;,&#34;G500C231&#34;,&#34;G500C185&#34;,&#34;G500A843&#34;,&#34;G500C423&#34;,&#34;G500C450&#34;,&#34;G500C032&#34;,&#34;G600B339&#34;,&#34;G600C802&#34;,&#34;G600C929&#34;,&#34;G600D971&#34;,&#34;G600E539&#34;,&#34;G600E852&#34;,&#34;G600F266&#34;,&#34;G600H419&#34;,&#34;G600H604&#34;,&#34;G600I438&#34;,&#34;G600I975&#34;,&#34;G600J134&#34;,&#34;G600J576&#34;,&#34;G600J858&#34;,&#34;G600K462&#34;,&#34;G600A417&#34;,&#34;G700A411&#34;,&#34;G700A903&#34;,&#34;G700B434&#34;,&#34;G700C161&#34;,&#34;G700C808&#34;,&#34;G700D544&#34;,&#34;G700F588&#34;,&#34;G700G965&#34;,&#34;G800B620&#34;,&#34;G800B771&#34;,&#34;G800D697&#34;,&#34;G800L886&#34;,&#34;G900E185&#34;,&#34;G900B326&#34;,&#34;G010D804&#34;],&#34;sex&#34;:[&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;],&#34;shape&#34;:[&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;],&#34;color&#34;:[&#34;green&#34;,&#34;green&#34;,&#34;green&#34;,&#34;green&#34;,&#34;green&#34;,&#34;green&#34;,&#34;green&#34;,&#34;green&#34;,&#34;green&#34;,&#34;green&#34;,&#34;green&#34;,&#34;green&#34;,&#34;green&#34;,&#34;green&#34;,&#34;red&#34;,&#34;red&#34;,&#34;red&#34;,&#34;red&#34;,&#34;red&#34;,&#34;red&#34;,&#34;red&#34;,&#34;red&#34;,&#34;red&#34;,&#34;red&#34;,&#34;red&#34;,&#34;red&#34;,&#34;red&#34;,&#34;red&#34;,&#34;red&#34;,&#34;green&#34;,&#34;green&#34;,&#34;green&#34;,&#34;green&#34;,&#34;green&#34;,&#34;red&#34;,&#34;red&#34;,&#34;red&#34;,&#34;red&#34;,&#34;green&#34;,&#34;green&#34;,&#34;red&#34;,&#34;green&#34;,&#34;red&#34;,&#34;red&#34;,&#34;red&#34;,&#34;red&#34;,&#34;green&#34;,&#34;red&#34;,&#34;green&#34;,&#34;green&#34;,&#34;red&#34;,&#34;red&#34;,&#34;green&#34;,&#34;green&#34;,&#34;red&#34;,&#34;red&#34;,&#34;green&#34;,&#34;red&#34;,&#34;green&#34;,&#34;red&#34;]},&#34;edges&#34;:{&#34;from&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;to&#34;:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,2,3,4,5,6,1,7,8,9,10,11,7,12,13,14,33,34,31,42,40,30,32,39,49,53,47,50,57,54,59,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,15,16,17,18,19,20,15,21,22,23,24,25,26,27,28,29,41,44,37,35,36,43,45,38,46,51,48,52,56,55,58]},&#34;nodesToDataframe&#34;:true,&#34;edgesToDataframe&#34;:true,&#34;options&#34;:{&#34;width&#34;:&#34;100%&#34;,&#34;height&#34;:&#34;100%&#34;,&#34;nodes&#34;:{&#34;shape&#34;:&#34;dot&#34;},&#34;manipulation&#34;:{&#34;enabled&#34;:false},&#34;edges&#34;:{&#34;arrows&#34;:&#34;to&#34;},&#34;layout&#34;:{&#34;hierarchical&#34;:{&#34;enabled&#34;:true,&#34;levelSeparation&#34;:250,&#34;nodeSpacing&#34;:150,&#34;direction&#34;:&#34;DU&#34;,&#34;sortMethod&#34;:&#34;directed&#34;}}},&#34;groups&#34;:null,&#34;width&#34;:null,&#34;height&#34;:null,&#34;idselection&#34;:{&#34;enabled&#34;:false},&#34;byselection&#34;:{&#34;enabled&#34;:false},&#34;main&#34;:null,&#34;submain&#34;:null,&#34;footer&#34;:null,&#34;background&#34;:&#34;rgba(0, 0, 0, 0)&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;第四种配色：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;node_1[sex==&amp;quot;male&amp;quot;,color:=&amp;quot;#0c8a7a&amp;quot;]
node_1[sex==&amp;quot;female&amp;quot;,color:=&amp;quot;#ff8d7a&amp;quot;]
visNetwork(node_1,edge_1) %&amp;gt;%  visEdges(arrows = &amp;quot;to&amp;quot;)  %&amp;gt;% visHierarchicalLayout(direction = &amp;quot;DU&amp;quot;,sortMethod = &amp;quot;directed&amp;quot;,levelSeparation = 250, nodeSpacing = 150)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-9&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;visNetwork html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-9&#34;&gt;{&#34;x&#34;:{&#34;nodes&#34;:{&#34;id&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;label&#34;:[&#34;G500A475&#34;,&#34;G500A300&#34;,&#34;G500A511&#34;,&#34;G500A482&#34;,&#34;G500A664&#34;,&#34;G500A848&#34;,&#34;G500A938&#34;,&#34;G500C583&#34;,&#34;G500A990&#34;,&#34;G500C591&#34;,&#34;G500A256&#34;,&#34;G500A060&#34;,&#34;G500C317&#34;,&#34;G500C561&#34;,&#34;G500C612&#34;,&#34;G500C355&#34;,&#34;G500A004&#34;,&#34;G500A839&#34;,&#34;G500A563&#34;,&#34;G500A624&#34;,&#34;G500A167&#34;,&#34;G500A380&#34;,&#34;G500A808&#34;,&#34;G500C231&#34;,&#34;G500C185&#34;,&#34;G500A843&#34;,&#34;G500C423&#34;,&#34;G500C450&#34;,&#34;G500C032&#34;,&#34;G600B339&#34;,&#34;G600C802&#34;,&#34;G600C929&#34;,&#34;G600D971&#34;,&#34;G600E539&#34;,&#34;G600E852&#34;,&#34;G600F266&#34;,&#34;G600H419&#34;,&#34;G600H604&#34;,&#34;G600I438&#34;,&#34;G600I975&#34;,&#34;G600J134&#34;,&#34;G600J576&#34;,&#34;G600J858&#34;,&#34;G600K462&#34;,&#34;G600A417&#34;,&#34;G700A411&#34;,&#34;G700A903&#34;,&#34;G700B434&#34;,&#34;G700C161&#34;,&#34;G700C808&#34;,&#34;G700D544&#34;,&#34;G700F588&#34;,&#34;G700G965&#34;,&#34;G800B620&#34;,&#34;G800B771&#34;,&#34;G800D697&#34;,&#34;G800L886&#34;,&#34;G900E185&#34;,&#34;G900B326&#34;,&#34;G010D804&#34;],&#34;sex&#34;:[&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;],&#34;shape&#34;:[&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;],&#34;color&#34;:[&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;]},&#34;edges&#34;:{&#34;from&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;to&#34;:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,2,3,4,5,6,1,7,8,9,10,11,7,12,13,14,33,34,31,42,40,30,32,39,49,53,47,50,57,54,59,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,15,16,17,18,19,20,15,21,22,23,24,25,26,27,28,29,41,44,37,35,36,43,45,38,46,51,48,52,56,55,58]},&#34;nodesToDataframe&#34;:true,&#34;edgesToDataframe&#34;:true,&#34;options&#34;:{&#34;width&#34;:&#34;100%&#34;,&#34;height&#34;:&#34;100%&#34;,&#34;nodes&#34;:{&#34;shape&#34;:&#34;dot&#34;},&#34;manipulation&#34;:{&#34;enabled&#34;:false},&#34;edges&#34;:{&#34;arrows&#34;:&#34;to&#34;},&#34;layout&#34;:{&#34;hierarchical&#34;:{&#34;enabled&#34;:true,&#34;levelSeparation&#34;:250,&#34;nodeSpacing&#34;:150,&#34;direction&#34;:&#34;DU&#34;,&#34;sortMethod&#34;:&#34;directed&#34;}}},&#34;groups&#34;:null,&#34;width&#34;:null,&#34;height&#34;:null,&#34;idselection&#34;:{&#34;enabled&#34;:false},&#34;byselection&#34;:{&#34;enabled&#34;:false},&#34;main&#34;:null,&#34;submain&#34;:null,&#34;footer&#34;:null,&#34;background&#34;:&#34;rgba(0, 0, 0, 0)&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;8.2选择展示的节点&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;visNetwork(node_1,edge_1) %&amp;gt;%  visEdges(arrows = &amp;quot;to&amp;quot;)  %&amp;gt;% visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&amp;gt;%visHierarchicalLayout(direction = &amp;quot;DU&amp;quot;,sortMethod = &amp;quot;directed&amp;quot;,levelSeparation = 250, nodeSpacing = 150)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-10&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;visNetwork html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-10&#34;&gt;{&#34;x&#34;:{&#34;nodes&#34;:{&#34;id&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;label&#34;:[&#34;G500A475&#34;,&#34;G500A300&#34;,&#34;G500A511&#34;,&#34;G500A482&#34;,&#34;G500A664&#34;,&#34;G500A848&#34;,&#34;G500A938&#34;,&#34;G500C583&#34;,&#34;G500A990&#34;,&#34;G500C591&#34;,&#34;G500A256&#34;,&#34;G500A060&#34;,&#34;G500C317&#34;,&#34;G500C561&#34;,&#34;G500C612&#34;,&#34;G500C355&#34;,&#34;G500A004&#34;,&#34;G500A839&#34;,&#34;G500A563&#34;,&#34;G500A624&#34;,&#34;G500A167&#34;,&#34;G500A380&#34;,&#34;G500A808&#34;,&#34;G500C231&#34;,&#34;G500C185&#34;,&#34;G500A843&#34;,&#34;G500C423&#34;,&#34;G500C450&#34;,&#34;G500C032&#34;,&#34;G600B339&#34;,&#34;G600C802&#34;,&#34;G600C929&#34;,&#34;G600D971&#34;,&#34;G600E539&#34;,&#34;G600E852&#34;,&#34;G600F266&#34;,&#34;G600H419&#34;,&#34;G600H604&#34;,&#34;G600I438&#34;,&#34;G600I975&#34;,&#34;G600J134&#34;,&#34;G600J576&#34;,&#34;G600J858&#34;,&#34;G600K462&#34;,&#34;G600A417&#34;,&#34;G700A411&#34;,&#34;G700A903&#34;,&#34;G700B434&#34;,&#34;G700C161&#34;,&#34;G700C808&#34;,&#34;G700D544&#34;,&#34;G700F588&#34;,&#34;G700G965&#34;,&#34;G800B620&#34;,&#34;G800B771&#34;,&#34;G800D697&#34;,&#34;G800L886&#34;,&#34;G900E185&#34;,&#34;G900B326&#34;,&#34;G010D804&#34;],&#34;sex&#34;:[&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;],&#34;shape&#34;:[&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;],&#34;color&#34;:[&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;]},&#34;edges&#34;:{&#34;from&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;to&#34;:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,2,3,4,5,6,1,7,8,9,10,11,7,12,13,14,33,34,31,42,40,30,32,39,49,53,47,50,57,54,59,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,15,16,17,18,19,20,15,21,22,23,24,25,26,27,28,29,41,44,37,35,36,43,45,38,46,51,48,52,56,55,58]},&#34;nodesToDataframe&#34;:true,&#34;edgesToDataframe&#34;:true,&#34;options&#34;:{&#34;width&#34;:&#34;100%&#34;,&#34;height&#34;:&#34;100%&#34;,&#34;nodes&#34;:{&#34;shape&#34;:&#34;dot&#34;},&#34;manipulation&#34;:{&#34;enabled&#34;:false},&#34;edges&#34;:{&#34;arrows&#34;:&#34;to&#34;},&#34;layout&#34;:{&#34;hierarchical&#34;:{&#34;enabled&#34;:true,&#34;levelSeparation&#34;:250,&#34;nodeSpacing&#34;:150,&#34;direction&#34;:&#34;DU&#34;,&#34;sortMethod&#34;:&#34;directed&#34;}}},&#34;groups&#34;:null,&#34;width&#34;:null,&#34;height&#34;:null,&#34;idselection&#34;:{&#34;enabled&#34;:true,&#34;style&#34;:&#34;width: 150px; height: 26px&#34;,&#34;useLabels&#34;:true,&#34;main&#34;:&#34;Select by id&#34;},&#34;byselection&#34;:{&#34;enabled&#34;:false,&#34;style&#34;:&#34;width: 150px; height: 26px&#34;,&#34;multiple&#34;:false,&#34;hideColor&#34;:&#34;rgba(200,200,200,0.5)&#34;},&#34;main&#34;:null,&#34;submain&#34;:null,&#34;footer&#34;:null,&#34;background&#34;:&#34;rgba(0, 0, 0, 0)&#34;,&#34;highlight&#34;:{&#34;enabled&#34;:true,&#34;hoverNearest&#34;:false,&#34;degree&#34;:1,&#34;algorithm&#34;:&#34;all&#34;,&#34;hideColor&#34;:&#34;rgba(200,200,200,0.5)&#34;,&#34;labelOnly&#34;:true},&#34;collapse&#34;:{&#34;enabled&#34;:false,&#34;fit&#34;:false,&#34;resetHighlight&#34;:true,&#34;clusterOptions&#34;:null}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;8.3 选择展示符合特定条件的个体&lt;/h3&gt;
&lt;p&gt;譬如雌性个体或者雄性个体&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;visNetwork(node_1,edge_1) %&amp;gt;%  visEdges(arrows = &amp;quot;to&amp;quot;)  %&amp;gt;% visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE, selectedBy = &amp;quot;sex&amp;quot;) %&amp;gt;% visHierarchicalLayout(direction = &amp;quot;DU&amp;quot;,sortMethod = &amp;quot;directed&amp;quot;,levelSeparation = 250, nodeSpacing = 150)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-11&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;visNetwork html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-11&#34;&gt;{&#34;x&#34;:{&#34;nodes&#34;:{&#34;id&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;label&#34;:[&#34;G500A475&#34;,&#34;G500A300&#34;,&#34;G500A511&#34;,&#34;G500A482&#34;,&#34;G500A664&#34;,&#34;G500A848&#34;,&#34;G500A938&#34;,&#34;G500C583&#34;,&#34;G500A990&#34;,&#34;G500C591&#34;,&#34;G500A256&#34;,&#34;G500A060&#34;,&#34;G500C317&#34;,&#34;G500C561&#34;,&#34;G500C612&#34;,&#34;G500C355&#34;,&#34;G500A004&#34;,&#34;G500A839&#34;,&#34;G500A563&#34;,&#34;G500A624&#34;,&#34;G500A167&#34;,&#34;G500A380&#34;,&#34;G500A808&#34;,&#34;G500C231&#34;,&#34;G500C185&#34;,&#34;G500A843&#34;,&#34;G500C423&#34;,&#34;G500C450&#34;,&#34;G500C032&#34;,&#34;G600B339&#34;,&#34;G600C802&#34;,&#34;G600C929&#34;,&#34;G600D971&#34;,&#34;G600E539&#34;,&#34;G600E852&#34;,&#34;G600F266&#34;,&#34;G600H419&#34;,&#34;G600H604&#34;,&#34;G600I438&#34;,&#34;G600I975&#34;,&#34;G600J134&#34;,&#34;G600J576&#34;,&#34;G600J858&#34;,&#34;G600K462&#34;,&#34;G600A417&#34;,&#34;G700A411&#34;,&#34;G700A903&#34;,&#34;G700B434&#34;,&#34;G700C161&#34;,&#34;G700C808&#34;,&#34;G700D544&#34;,&#34;G700F588&#34;,&#34;G700G965&#34;,&#34;G800B620&#34;,&#34;G800B771&#34;,&#34;G800D697&#34;,&#34;G800L886&#34;,&#34;G900E185&#34;,&#34;G900B326&#34;,&#34;G010D804&#34;],&#34;sex&#34;:[&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;male&#34;,&#34;female&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;,&#34;male&#34;,&#34;female&#34;],&#34;shape&#34;:[&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;,&#34;square&#34;,&#34;dot&#34;],&#34;color&#34;:[&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;,&#34;#0c8a7a&#34;,&#34;#ff8d7a&#34;]},&#34;edges&#34;:{&#34;from&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],&#34;to&#34;:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,2,3,4,5,6,1,7,8,9,10,11,7,12,13,14,33,34,31,42,40,30,32,39,49,53,47,50,57,54,59,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,15,16,17,18,19,20,15,21,22,23,24,25,26,27,28,29,41,44,37,35,36,43,45,38,46,51,48,52,56,55,58]},&#34;nodesToDataframe&#34;:true,&#34;edgesToDataframe&#34;:true,&#34;options&#34;:{&#34;width&#34;:&#34;100%&#34;,&#34;height&#34;:&#34;100%&#34;,&#34;nodes&#34;:{&#34;shape&#34;:&#34;dot&#34;},&#34;manipulation&#34;:{&#34;enabled&#34;:false},&#34;edges&#34;:{&#34;arrows&#34;:&#34;to&#34;},&#34;layout&#34;:{&#34;hierarchical&#34;:{&#34;enabled&#34;:true,&#34;levelSeparation&#34;:250,&#34;nodeSpacing&#34;:150,&#34;direction&#34;:&#34;DU&#34;,&#34;sortMethod&#34;:&#34;directed&#34;}}},&#34;groups&#34;:null,&#34;width&#34;:null,&#34;height&#34;:null,&#34;idselection&#34;:{&#34;enabled&#34;:true,&#34;style&#34;:&#34;width: 150px; height: 26px&#34;,&#34;useLabels&#34;:true,&#34;main&#34;:&#34;Select by id&#34;},&#34;byselection&#34;:{&#34;enabled&#34;:true,&#34;style&#34;:&#34;width: 150px; height: 26px&#34;,&#34;multiple&#34;:false,&#34;hideColor&#34;:&#34;rgba(200,200,200,0.5)&#34;,&#34;variable&#34;:&#34;sex&#34;,&#34;main&#34;:&#34;Select by sex&#34;,&#34;values&#34;:[&#34;female&#34;,&#34;male&#34;]},&#34;main&#34;:null,&#34;submain&#34;:null,&#34;footer&#34;:null,&#34;background&#34;:&#34;rgba(0, 0, 0, 0)&#34;,&#34;highlight&#34;:{&#34;enabled&#34;:true,&#34;hoverNearest&#34;:false,&#34;degree&#34;:1,&#34;algorithm&#34;:&#34;all&#34;,&#34;hideColor&#34;:&#34;rgba(200,200,200,0.5)&#34;,&#34;labelOnly&#34;:true},&#34;collapse&#34;:{&#34;enabled&#34;:false,&#34;fit&#34;:false,&#34;resetHighlight&#34;:true,&#34;clusterOptions&#34;:null}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>a simple dictionary</title>
      <link>/post/a-simple-dictionary/</link>
      <pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/a-simple-dictionary/</guid>
      <description>&lt;p&gt;栾佳硕的任务：&lt;/p&gt;
&lt;p&gt;1.建立一个字典，用来存储英语单词和释义的，要求：用户输入一个单词，他就会输出它的释义。&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;#建立简单的英汉词典
eng_cn_dict = {&amp;quot;love&amp;quot;:&amp;quot;爱&amp;quot;,
              &amp;quot;China&amp;quot;:&amp;quot;中国；瓷器&amp;quot;,
              &amp;quot;desk&amp;quot;:&amp;quot;桌子&amp;quot;,
              &amp;quot;chair&amp;quot;:&amp;quot;椅子&amp;quot;,
              &amp;quot;room&amp;quot;:&amp;quot;房间&amp;quot;,
              &amp;quot;floor&amp;quot;:&amp;quot;地面;一楼&amp;quot;,
              &amp;quot;light&amp;quot;:&amp;quot;光线；灯&amp;quot;,
              &amp;quot;cup&amp;quot;:&amp;quot;水杯&amp;quot;}
#定义一个查询单词的函数
def lookup_word(word):
    if word in eng_cn_dict :
        print(word + &amp;quot;: &amp;quot; + eng_cn_dict.get(word))
    else:
        print(word + &amp;quot;还没有收录到词典中&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查询两个单词，一个已经收录在字典中，一个还没有收录在字典中。&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;lookup_word(&amp;quot;room&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## room: 房间&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;lookup_word(&amp;quot;boy&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## boy还没有收录到词典中&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>three missions</title>
      <link>/post/three-missions/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/three-missions/</guid>
      <description>&lt;p&gt;恭喜你，获得了第一条秘密信息！
print(“No, a time bomb is about to explode!”)&lt;/p&gt;
&lt;p&gt;2.请编写一个程序，算出前十五个斐波那契数。&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;fibonacci = []
fibonacci.append(1)
fibonacci.append(1) 
fibonacci_number = 15
for i in range(2,fibonacci_number):
    fibonacci.append(fibonacci[i-1] + fibonacci[i-2])
    
print(fibonacci)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3.编写一个程序，建立一个列表，找出其中最大的一个数，并输出。&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;rand_numbers = [3,7,5,4,6,9,2]
max_number = rand_numbers[0]
for i in range(1,len(rand_numbers)):
    if rand_numbers[i] &amp;gt; max_number :
        max_number = rand_numbers[i]
    
print(max_number)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 9&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;4.建立一个模块，里面要有个函数，可以算出被除数和除数的余数。编写一个程序，建立一个变量（里面是数字），判断它是奇数还是偶数（要用到这个模块）。&lt;/p&gt;
&lt;p&gt;由于在R中调用python模块，有些技术问题。因此直接定义remainder函数，算出被除数和除数的余数。&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def remainder(dividend,divisor):
    return(dividend % divisor)
    
number = 11
if remainder(number,2) == 0 :
    print(&amp;quot;This is an odd number&amp;quot;)
else:
    print(&amp;quot;This is an even number&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## This is an even number&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>home work from jiashuo luan</title>
      <link>/post/home-work-from-jiashuo-luan/</link>
      <pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/home-work-from-jiashuo-luan/</guid>
      <description>&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;问题&lt;/h2&gt;
&lt;p&gt;编写一个程序，要求输入一个数，判断它是否能被3,5,7整除，是输出“yes”，不是输出“no”（解密点30）
当前解密点（70,100)&lt;/p&gt;
&lt;p&gt;定义一个判断数字是否可以被3,5,7同时整除的函数&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def is_divisibility(int_num):
    if (int_num % 3 == 0) and (int_num % 5 == 0) and (int_num % 7 == 0) :
        return True
    else:
        return False&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;测试数字50, 105, 200, 315，哪些数字可以满足上述条件。如果满足条件，输出yes，否则输出no。&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;numbers = [50, 105, 200, 315]
for i in range(len(numbers)) :
    if is_divisibility(numbers[i]) :
        print(&amp;quot;yes&amp;quot;)
    else:
        print(&amp;quot;no&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## no
## yes
## no
## yes&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>水仙花问题</title>
      <link>/post/daffodil-question/</link>
      <pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/daffodil-question/</guid>
      <description>&lt;p&gt;传说，有一种数，叫“水仙花”数。它是一个三位数，并且每一位数的三次幂加起来等于他本身。比如153,1*&lt;em&gt;3+5*&lt;/em&gt;3+3**3=153。&lt;/p&gt;
&lt;p&gt;编写一个程序，找出所有的水仙花数（秘密信息1条）。&lt;/p&gt;
&lt;p&gt;定义一个函数，判断数字是否为水仙花数。&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def is_daffodil(number):
    strnum = str(number)
    if (int(strnum[0])**3 + int(strnum[1])**3 + int(strnum[2])**3) == number :
        return True
    else:
        return False
    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查找所有三位数中的水仙花数字。&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;#存储水仙花数字
daffodil_numbers = []
for i in range(100,1000) :
    if is_daffodil(i):
        daffodil_numbers.append(i)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;列出所有的水仙花数字：&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(daffodil_numbers)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [153, 370, 371, 407]&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>how to judge a number is a prime</title>
      <link>/post/how-to-judge-a-number-is-a-prime/</link>
      <pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/how-to-judge-a-number-is-a-prime/</guid>
      <description>&lt;p&gt;栾佳硕的作业：&lt;/p&gt;
&lt;p&gt;解密题目2：&lt;/p&gt;
&lt;p&gt;编写一个程序，让它输出1-200之间的所有质数。（解密点50）&lt;/p&gt;
&lt;p&gt;解密点（20/100）&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;#定义一个判断数字是否为质数的函数
def is_prime(number):
    if number == 1 :
        return False
    if number == 2 :
        return True
    if number &amp;gt;= 3 :
        a = True
        for i in range(2,number):
            if number % i == 0 :
                a = False
                break
        return a
            
list1 = []
number =200
for i in range(1,number+1) :
    if is_prime(i) == True :
        list1.append(i)
#质数为：
print(list1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199]&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>print your cv using python</title>
      <link>/post/print-your-cv-using-python/</link>
      <pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/print-your-cv-using-python/</guid>
      <description>&lt;p&gt;栾佳硕的作业：&lt;/p&gt;
&lt;p&gt;解密题目一：&lt;/p&gt;
&lt;p&gt;定义一个函数，让它输出你的名字，年龄，住址以及爱好，分四行打印出来。然后，调用这个函数。（解密点20）&lt;/p&gt;
&lt;p&gt;目前解密点（0/100）&lt;/p&gt;
&lt;p&gt;当解密点到达100时，我会告诉你密码。&lt;/p&gt;
&lt;p&gt;先把第一题答案发过来，我就会告诉你下一道题。&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def print_cv(name,age,address,hobby):
    print(name)
    print(age)
    print(address)
    print(hobby)
    
print_cv(&amp;quot;栾生&amp;quot;,&amp;quot;40&amp;quot;,&amp;quot;南京路106号&amp;quot;,&amp;quot;打羽毛球&amp;quot;)    &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 栾生
## 40
## 南京路106号
## 打羽毛球&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>利用hugo展示新发表的论文</title>
      <link>/post/how-to-add-new-paper-in-publication/</link>
      <pubDate>Thu, 07 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/how-to-add-new-paper-in-publication/</guid>
      <description>&lt;p&gt;利用益辉的blogdown包，发post是很简单的。直接点击Addins-&amp;gt;New post就可以了。但是如果要在Publications中添加新的文章，点击New post，将Subdirectory文本框内容修改为Publication，也是可以生成一个新的扩展名为md的文档，但是文档的格式是不对的，给出的仍然是post要求的文档格式。&lt;/p&gt;
&lt;p&gt;如果你知道publication要求的文档内容标准格式，直接粘贴进来，也是可以的。
标准格式如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;+++
title = &amp;quot;How to Generate Publication Markdown&amp;quot;
date = 2018-06-07T12:36:50+08:00
draft = false

# Authors. Comma separated list, e.g. `[&amp;quot;Bob Smith&amp;quot;, &amp;quot;David Jones&amp;quot;]`.
authors = [&amp;quot;&amp;quot;]

# Publication type.
# Legend:
# 0 = Uncategorized
# 1 = Conference proceedings
# 2 = Journal
# 3 = Work in progress
# 4 = Technical report
# 5 = Book
# 6 = Book chapter
publication_types = [&amp;quot;0&amp;quot;]

# Publication name and optional abbreviated version.
publication = &amp;quot;&amp;quot;
publication_short = &amp;quot;&amp;quot;

# Abstract and optional shortened version.
abstract = &amp;quot;&amp;quot;
abstract_short = &amp;quot;&amp;quot;

# Featured image thumbnail (optional)
image_preview = &amp;quot;&amp;quot;

# Is this a selected publication? (true/false)
selected = false

# Projects (optional).
#   Associate this publication with one or more of your projects.
#   Simply enter the filename (excluding &amp;#39;.md&amp;#39;) of your project file in `content/project/`.
#   E.g. `projects = [&amp;quot;deep-learning&amp;quot;]` references `content/project/deep-learning.md`.
projects = []

# Tags (optional).
#   Set `tags = []` for no tags, or use the form `tags = [&amp;quot;A Tag&amp;quot;, &amp;quot;Another Tag&amp;quot;]` for one or more tags.
tags = []

# Links (optional).
url_pdf = &amp;quot;&amp;quot;
url_preprint = &amp;quot;&amp;quot;
url_code = &amp;quot;&amp;quot;
url_dataset = &amp;quot;&amp;quot;
url_project = &amp;quot;&amp;quot;
url_slides = &amp;quot;&amp;quot;
url_video = &amp;quot;&amp;quot;
url_poster = &amp;quot;&amp;quot;
url_source = &amp;quot;&amp;quot;

# Custom links (optional).
#   Uncomment line below to enable. For multiple links, use the form `[{...}, {...}, {...}]`.
# url_custom = [{name = &amp;quot;Custom Link&amp;quot;, url = &amp;quot;http://example.org&amp;quot;}]

# Does this page contain LaTeX math? (true/false)
math = false

# Does this page require source code highlighting? (true/false)
highlight = true

# Featured image
# Place your image in the `static/img/` folder and reference its filename below, e.g. `image = &amp;quot;example.jpg&amp;quot;`.
[header]
image = &amp;quot;&amp;quot;
caption = &amp;quot;&amp;quot;

+++
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果不知道，那么就可以通过另外一种方式建立一个文档，添加你发表的最新文章。&lt;/p&gt;
&lt;p&gt;在Rstudio控制台Console下运行命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;blogdown::hugo_cmd(c(&amp;quot;new&amp;quot;,&amp;quot;publication/how-to-generate-publication-markdown.md&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;那么就会在content/publication文件夹下生成一个名为how-to-generate-publication-markdown.md的文件。 文件名单词间最好用-隔开，扩展名必须为md。&lt;/p&gt;
&lt;p&gt;打开该文件，你会发现publication要求的标准格式。&lt;/p&gt;
&lt;p&gt;林科院的董雷鸣老师告诉我一个如何在主页展示文章时，不显示大段摘要内容的办法。&lt;/p&gt;
&lt;p&gt;需要修改content/home/文件夹下的publications.md和publications_selected.md文件中的一部分内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# List format.
#   0 = Simple
#   1 = Detailed
#   2 = APA
#   3 = MLA
list_format = 0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;把list_format设置为0就可以了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Group selection and kin selection</title>
      <link>/post/group-selection-and-kin-selection/</link>
      <pubDate>Tue, 05 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/group-selection-and-kin-selection/</guid>
      <description>&lt;p&gt;正在做虾类个体间的社会交互行为的遗传效应分析，因此对于演化方面的内容特别感兴趣。目前演化生物学家，关于生物到底是如何进化的，观点并不一致。存在两大阵营：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;亲缘选择 &lt;a href=&#34;https://en.wikipedia.org/wiki/Kin_selection&#34;&gt;Kin selection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;组选择 &lt;a href=&#34;https://en.wikipedia.org/wiki/Group_selection&#34;&gt;Group selection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前吵得不可纷争。关于这两个理论，可以看上述百科链接。&lt;/p&gt;
&lt;div id=&#34;kin-selection&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1. Kin Selection&lt;/h2&gt;
&lt;p&gt;Kin selection的核心是内含适应性（&lt;a href=&#34;https://en.wikipedia.org/wiki/Inclusive_fitness&#34;&gt;inclusive fitness&lt;/a&gt;）。关于内含适应性（&lt;a href=&#34;http://www.psychspace.com/psych/viewnews-10879.html&#34;&gt;中文解释&lt;/a&gt;），可以简单理解为：“Hamilton认为&lt;strong&gt;经典适应性&lt;/strong&gt; ( classical fitness) ,指个体将基因遗传给后代的直接繁殖成功率，这一概念的含义太狭隘了，根本不足以描述自然选择的进化过程。他提出了这样的理论：&lt;strong&gt;自然选择将倾向于那些能促使有机体基因得以传播的特性，而不管有机体是否能直接繁殖出后代&lt;/strong&gt;。亲属身上携带着我们的基因拷贝， 所以我们才会对亲属给予照顾，而亲代投资（指对于女的投资）则得到了重新解释——它只不过是照顾亲属的种特例而已。有机体可以通过帮助他的兄弟姐妹、侄子、外甥等亲属的生存和繁殖来增加他的基因的繁殖成功率，因为上述亲属身上都可能携带着该有机体的基因。Hamilton的天才之处在于，他认识到经典适应性的定义太狭隘了，应该被拓展为内含适应性。”&lt;/p&gt;
&lt;p&gt;内含适应性跟经典的利用亲缘关系矩阵进行遗传评估的动物数量遗传学理论是不谋而合的，实际上都是根据个体间的亲缘关系，进行社会交互行为的评价。“从技术上讲， 内含适应性并不是指个体的某种特性，而是指其行为或影响( effect ) 的某种特性。因此，内含适应性可以被看作是个体自身的繁殖成功率(经典适应性)，加上个体行为对其遗传亲属的繁殖成功率的影响。对于这第二种成分，个体对亲属的影响可以通过他们之间的遗传相关度评定。比如说，个体和兄弟姐妹是0.50 ( 因为他们有50%的遗传相关度)；和祖父母和祖孙是0.25 ( 遗传相关度为25%) ；第一代堂表亲是0.125 ( 遗传相关度为12.5% )”。&lt;/p&gt;
&lt;p&gt;基于内含适应性的亲缘选择理论，可以比较完美的解释蚂蚁、 蜜蜂等真社会&lt;a href=&#34;https://en.wikipedia.org/wiki/Eusociality&#34;&gt;eusociality&lt;/a&gt;昆虫的利他行为。真社会性的定义为：“the highest level of organization of animal sociality, is defined by the following characteristics: cooperative brood care (including care of offspring from other individuals), overlapping generations within a colony of adults, and a division of labor into reproductive and non-reproductive groups”，有三个典型的特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;合作培育后代&lt;/li&gt;
&lt;li&gt;世代重叠 一个成体的栖息地至少包括2个重叠世代的个体&lt;/li&gt;
&lt;li&gt;劳动力划分为可繁殖后代去和不可繁殖后代组&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hamilton公式：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[r &amp;gt; \frac{c}{b}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Hamilton认为，如果利他者自身所付出的代价c，除以利他行为的受惠者所获得的收益b，小于受惠者携带利他者基因的概率值r，那么这样的利他基因就能够得以进化，即被保留下，并得以扩散。&lt;/p&gt;
&lt;p&gt;举例如下：“这个公式表明，如果遗传相关度为0.50 的亲属（同胞兄妹）所获得的收益比利他者付出的代价高出2 倍;如果遗传相关度为0.25 的亲属（同父异母兄妹）所获得的收益比利他者付出的代价高出4 倍，如果遗传相关度为0.125 的亲属所获得利益比利他者付出的代价高8倍，依此类推；那么自然选挥将会支持利他者付出代价。举个例子来说，假设你经过一条河，碰巧看到你的亲属掉进间里，正在揣急的水中挣扎。你可以跳进水里去救他，但可能会搭上自己的性命。按照Hamilton 规则，自然选择所支持的决策规则是，如果你能够救出3 个兄弟(而不是1 个) ，你才应该跳进水里去冒险救人。你不可能为了救一个兄弟而赔上自己的性命，因为这将会违反Hamilton 规则。从Hamilton 规则的逻辑看来，进化形成的决策规则会让你牺牲自己的性命去挽救5个侄子或外甥，但是对于第一代堂兄弟而言，在你牺牲之前，你必须挽救9 个堂兄弟才能满足Hamilton 规则”。&lt;/p&gt;
&lt;p&gt;在蜜蜂等真社会昆虫中，姐妹间的亲缘关系要比母女间的亲缘关系更近。因为雌蜂是由受精卵发育而来的，而雄峰是由未受精卵发育而来的。因此雌蜂间的亲缘关系是3/4，而母女间只有1/2。之所以雌蜂（为受精卵发育而成）间是3/4，是因为所有雌蜂的父本的基因都是完全相同的，因此有1/2是来自父本是完全一样的，再加上母本1/4相同率，就是3/4。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;2. 组选择&lt;/h2&gt;
&lt;p&gt;组选择的定义其实非常简单，指的是选择的单位是组，而不是个体。后续又发展出了多层次选择（组+个体）。&lt;/p&gt;
&lt;p&gt;E. O. Wilson是当前支持Group selection的大牛。Wilson早期是支持亲缘选择的，而且在上世纪七十年代写了一本书《社会生物学：新的综合》，采用内含适应性理论，实际上是把人类的行为与基因联系在了一起。但是，他联合另外两位科学界，2010年在Nature上发表&lt;a href=&#34;http://faculty.washington.edu/beecher/Nowak%20etal%20-%20evolution%20of%20eusociality%20-%20Nature%202010.pdf&#34;&gt;文章&lt;/a&gt;“The evolution of eusociality”，否定了Kin selection是演化的动力，引起了学术界轩然大波，一百多名科学家发文反对。有一个中文帖子，对Nature文章进行了较为详细的&lt;a href=&#34;http://headsalon.org/archives/919.html&#34;&gt;解读&lt;/a&gt;。果壳网有篇关于威尔逊的专访(&lt;a href=&#34;http://headsalon.org/archives/919.html&#34; class=&#34;uri&#34;&gt;http://headsalon.org/archives/919.html&lt;/a&gt;)，对于Nature文章的核心思想进行了解释，“这篇文章运用了大量的数学工具，结合演化博弈论与种群遗传学，论证：要解释&lt;strong&gt;真社会性&lt;/strong&gt;，并不需要用到雌蚁姐妹间亲缘关系很近这一事实；实际上后者根本就不是前者的原因。文章还指出，汉密尔顿不等式在绝大多数情况下根本就不成立。至于社会性和利他行为产生的真正原因，则是威尔逊过去一贯的主张&lt;strong&gt;巢穴&lt;/strong&gt;。许多个体同居一处并形成分工，这在很多情况下都有利；而这样的合作并不是因为个体间的亲缘程度而产生的。作为佐证，文章指出，自然界很多亲缘关系极近、甚至根本就是采用克隆生殖的物种，并没有产生真社会性；相反，一些在亲缘关系上并无特殊之处的物种却反而有高度发达的真社会性。”&lt;/p&gt;
&lt;p&gt;关于汉密尔顿、威尔逊等相关理论，以及亲缘选择和组选择等历史，可以参考一下两个链接：&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/20541847/answer/15497385&#34;&gt;自私的基因理论是不是现在生物学界广泛接受的理论？ - 屈竟通的回答 - 知乎&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>收获体重IGE与存活性状DGE之间的遗传相关</title>
      <link>/post/i-am-happty-to-get-the-correlation-between-ige-of-body-weight-and-dge-of-survival/</link>
      <pubDate>Fri, 11 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/i-am-happty-to-get-the-correlation-between-ige-of-body-weight-and-dge-of-survival/</guid>
      <description>&lt;p&gt;收获体重IGE与存活性状DGE之间的遗传相关，模型较为复杂，成功调试出来，有相当难度的。具体时间应该是在2018年的3月份解决了该问题。是通过父母本模型解决的上述问题。&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/images/IGEandDGEcor.jpg&#34; alt=&#34;收获体重IGE与存活性状DGE之间的遗传相关&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;收获体重IGE与存活性状DGE之间的遗传相关&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Note for IGE on harvest body weight in Nile tilapia</title>
      <link>/post/note-for-ige-for-harvest-body-weight-in-nile-tilapia/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/note-for-ige-for-harvest-body-weight-in-nile-tilapia/</guid>
      <description>&lt;p&gt;重点关注收获体重IGE与存活的相关性解释。&lt;/p&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;摘要&lt;/h2&gt;
&lt;p&gt;关于间接遗传效应的定义，英文标准定义为“The heritable effect of an individual on the trait values of other individuals it interacts with is known as an indirect genetic effect (IGE)”。IGE可能会影响选择反应。鱼类对于高生长速率的持续改良，已经表明选育出的鱼具有更强的攻击性和竞争性。这可能降低生长速度的选择反应。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于这一点，以前是深信不疑的。虾类混合养殖和多家系多分组IGE测试结果表明，混养池生长DGE跟IGE的确是负相关的，这表明传统的选择方案，的确会选到竞争性强的虾。但是虾类更多的是竞争性行为，而不是攻击性行为。他们的后代在一起，只是竞争性强的虾会长的大，弱小的虾吃不到食物，会长的小一些，而不是互相攻击会导致死亡率升高。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这篇文章的主要目的是量化尼罗罗非鱼GIFT品系收获体重的遗传和非遗传效应。本文共计测量了6330尾鱼的收获体重，估计其遗传genetic和非遗传 (non-genetic) 参数。对收获体重和存活性状进行两性状分析(bivariate analysis)，拟合不同的线性混合效应模型，调查是否存在IGE和其他非遗传效应。当模型中包括母性共同环境效应时，并不是所有的遗传参数都可以估计出来。由于巢式交配设计的缺陷，一尾雄鱼只跟1-2尾雌鱼交配，导致直接遗传效应跟母性共同环境效应混淆在一起，无法剖分。在水产动物选择育种方案中，1雄配2雌是一个常规设计。一旦部分1:2交配组失败，半同胞家系数量较少时，利用这种交配设计便无法剖分出母性共同环境效应。&lt;/p&gt;
&lt;p&gt;利用不包括共同环境效应的模型，估计出收获体重的遗传参数，结果表明在总遗传方差中，48%来自IGE方差，且IGE效应显著。包括母性共同环境效应的模型也表明，尽管显著性统计检验不显著，但是IGE效应的确存在。收获体重的DGE-IGE遗传相关是负值(-0.38±0.19)，表明如果在一个鱼类个体间为了资源相互竞争的环境下，进行多代传统选择后，个体间的竞争将会加剧。&lt;/p&gt;
&lt;p&gt;存活性状的DGE与收获体重IGE之间存在一个非常强的负相关 (-0.79±0.30) ，表明携带更好存活基因的个体，具有更强的竞争性能，抑制同一组内同伴个体的生长速度。&lt;/p&gt;
&lt;p&gt;本文结果表明，可遗传的竞争交互影响了尼罗罗非鱼的收获体重。因此，在一个竞争性的环境下对生长速度进行选择，需要提前设计不同于经典混合养殖测试的育种方案，避免选育多代后，核心育种群体个体的竞争性或者说攻击性变得更强。&lt;/p&gt;
&lt;p&gt;需要进一步评估IGE的作用和重要性以及如何在商业育种系统中利用该效应。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.前言&lt;/h2&gt;
&lt;p&gt;群体内个体的性状值不仅受遗传组成 (genetic makeup) 的影响，也受&lt;strong&gt;个体发育环境&lt;/strong&gt;以及&lt;strong&gt;同其他个体的社会交互&lt;/strong&gt;的影响。从社会交互的角度来看 (with social interaction) ，个体的基因型可能会影响与之交互的其他个体的性状值。在过去的研究中，动物育种专家没有重视社会交互可能产生的影响。最近二十年，进化生物学家和动物育种专家开始关注IGE，主要是因为IGE可能会影响选择反应的方向以及进展 (direction and magnitude) ，即可以利用多少遗传变异，用于选择反应。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这一段比较重要，是关于竞争性行为与生长和存活的关系的综述。&lt;/strong&gt;过去二十年间，水产遗传学家认为生长更快的鱼对于资源，具有更强的侵略性 (aggressive) 和竞争性 (competitive) 。Moyle (1969) 和Swain and Riddell (1990) 等在资源受限的养殖环境下，证实了这种关联性。与之相反，在资源充足的情况，快速生长的鱼很少会表现出侵略性。尼罗罗非鱼的养殖模式比较多，有一些集约化的养殖模式，可能会导致鱼类个体间产生竞争 (Tilapia aquaculture production systems encompass a range of environments from the viewpoint of among fish competition, including some where it is intense) 。&lt;/p&gt;
&lt;p&gt;本文通过限制饲料投喂量，来建立一个竞争性的养殖环境，评估社会交互或者IGE。 (In this paper, we investigate the magnitude of social interaction or IGE in an environment where competition for food is induced by the feeding regime.&lt;/p&gt;
&lt;p&gt;世界水产养殖产量，每年增加8.8%，尼罗罗非鱼在淡水养殖种类中占有重要的地位。世界渔业中心建立的GIFT品系，在马来西亚已经完成12代选育。GIFT品系收获体重的变异系数大约在40到60%，这是非常高的数字，作者认为&lt;strong&gt;inter-individual competition和dominance hierarchy&lt;/strong&gt;是一个重要的原因。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;2. 材料与方法&lt;/h2&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.1 实验材料&lt;/h3&gt;
&lt;p&gt;实验用到了G7-G9三个世代 (2009-2011) 的三批鱼。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.2 实验设计&lt;/h3&gt;
&lt;p&gt;作者采用block design(区块设计) 来测试IGE。每个区块包括11个家系，家系间通过一种不完全双列杂交方式，两个组合在一起。每个区块产生55个组合，每个家系参与10个组合。每个组合 (1个网箱) 包括16条鱼，每个家系贡献8条。三个批次，总共设计了505个组，实际收获493个组，使用的家系数量为167个。&lt;/p&gt;
&lt;p&gt;每天的饲料投喂量大约为鱼体重的3-5%。为了能够产生竞争，把饲料放在网箱的一个角落里 (In order to allow competition take place among the fish, the feed was administered at a corner of the net-cage, instead of spreading it all over the surface of the netcage)。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.3 记录&lt;/h3&gt;
&lt;p&gt;罗非鱼在网箱中养殖大约5-8个月，体重达到200-250g时收获。收获需要1-2天时间。记录生长和存活性状测定值。共计获得6330尾鱼的表型信息，利用包括37670尾鱼的系谱信息进行遗传评估。在水产上，这可能是数据量最大的一次IGE测试实验。&lt;strong&gt;与对虾相比，组的数量多，但是获得的个体数差不多&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.4 表型和遗传参数估计&lt;/h3&gt;
&lt;p&gt;数据分析通过REML方法，利用ASReml软件完成。作者认为，收获体重仅在存活个体中获得，这其实是全部个体的一个子集 (不包括死亡个体)，用来估计遗传参数是不准确的。因此需要利用收获体重和存活两性状模型来估计。&lt;strong&gt;注：这样说是很牵强的。因为死亡个体并没有收获体重记录，加入存活性状，并不能改变什么？本文的一个结果是存活DGE跟收获体重DGE之间存在正相关，与收获体重IGE之间存在负相关。作者的意思可能是说，加入存活率，可能估计收获体重的DGE和IGE更加准确？&lt;/strong&gt;在本文中，作者对收获体中进行了log转换。&lt;/p&gt;
&lt;p&gt;作者设计了5种模型，用来分析收获体重的DGE和IGE遗传参数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模型1：包括DGE效应、随机组效应，以及组与家系的随机交互效应。随机组效应，也就是网箱效应，指的是个体间非遗传的间接效应；组与家系的随机交互效应，也称作非遗传的亲缘效应 (non-genetic kin effect) ，它的目的是分析鱼类能否识别亲缘个体，如自己的同胞兄妹，它们之间不产生竞争。&lt;/li&gt;
&lt;li&gt;模型2：模型1+IGE效应，但是不包括非遗传的亲缘效应。&lt;/li&gt;
&lt;li&gt;模型3：模型1+IGE效应+非遗传的亲缘效应。&lt;/li&gt;
&lt;li&gt;模型4：在模型3的基础上，进一步加入母性共同环境效应，那么会导致收获体重DGE效应剖分不出来，因此模型4在模型3的基础上，包括的母性共同环境效应，但是去除了DGE和IGE效应。&lt;/li&gt;
&lt;li&gt;模型5：在模型4的基础上，进一步加入IGE效应。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;就模型4和模型5的比较分析表明，IGE效应显著。&lt;/p&gt;
&lt;p&gt;固定效应主要是批次 (年份) 、性别、池塘效应。&lt;/p&gt;
&lt;p&gt;协变量包括日龄，以及同伴的日龄 (social age)。同伴的日龄也很重要，因为同伴的日龄大，通常意味着会影响该个体的生长。个体规格差异是会造成竞争的一个重要原因。&lt;strong&gt;这个因素在对虾模型中没有考虑&lt;/strong&gt;，从结果部分来看，影响并不大。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;3. 结果&lt;/h2&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;3.1 总体情况&lt;/h3&gt;
&lt;p&gt;测试群体的变异系数36%，要小于其他已经发表的文献。测试群体存活率为77%，跟大部分已发表的文献类似。群体中部分不能识别家系编号的个体，放弃掉，大约占全部存活个体数的6%左右。&lt;/p&gt;
&lt;p&gt;尽管social age的回归系数达到显著性水平，但是值非常低，对于收获体重的影响非常有限。&lt;/p&gt;
&lt;p&gt;为了测试估计结果的健壮性，本文剔除了异常值后重新计算估计结果。异常值的标准为：其残差超过残差标准差的3.5倍。结果表明，估计出的参数变化不大 (1%到10%) ，相关系数没有变化。因此本文中使用的仍然是基于全部数据的估计结果。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;3.2 表型和遗传参数估计值&lt;/h3&gt;
&lt;p&gt;从似然值上看，双变量分析模型要明显优于单变量分析模型。&lt;/p&gt;
&lt;p&gt;模型中包括母性共同环境效应，无法有效地估计DGE和IGE相关参数。作者给出的原因为：“liable to change from positive definite to fixed at a boundary”。另外存在的一个估计问题为：“parameters did not converge;results not shown”。&lt;/p&gt;
&lt;p&gt;LRT检验表明，与模型1相比，加入IGE后的模型3具有更好的拟合度 (A LRT showed that model 3 had a better goodness of fit than model 1) 。&lt;/p&gt;
&lt;p&gt;尽管IGE遗传方差估计值本身比较小，但是它对总遗传变异的贡献是非常大的 (Although the estimated indirect genetic effect may seem small, its contribution to the total heritable variation was substantial) ，所占比例为48%。&lt;/p&gt;
&lt;p&gt;然而，负的DGE-IGE遗传协方差完全抵消掉了IGE方差对总遗传变异的贡献！因为:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\frac{2(n-1)\sigma_{A_{SD}}}{ \sigma^{2}_{TBV}}\times100\% = -55\% \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;因此，总遗传方差几乎与原来的直接遗传方差相等(As a consequence, the total genetic vairance was nearly identical to the ordinary direct genetic variance) ，那么&lt;span class=&#34;math inline&#34;&gt;\(T^{2}\)&lt;/span&gt;与&lt;span class=&#34;math inline&#34;&gt;\(h^{2}\)&lt;/span&gt;几乎相等 (approximately equal to) 。&lt;/p&gt;
&lt;p&gt;总遗传变异没有变化，并不意味着IGE对选择反应没有影响(Beware that the lack of impact on &lt;span class=&#34;math inline&#34;&gt;\(\sigma^{2}_{TBV}\)&lt;/span&gt; does not mean that IGE does not affet response to selection)。&lt;/p&gt;
&lt;p&gt;相反，负的DGE-IGE遗传相关将会降低经典群体选择(ordinary mass selection)或BLUP选择的反应。&lt;/p&gt;
&lt;p&gt;中等的、但是显著的负DGE-IGE遗传相关表明，&lt;strong&gt;测试群体内存在竞争现象&lt;/strong&gt;。存活DGE与收获体重DGE之间的遗传相关很低，而且不显著。但是存活DGE与收获体重IGE之间存在显著的负相关(strongly negative）。这表明，&lt;strong&gt;存活性能强的个体，会抑制同组内其他个体的生长速度&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;基于AIC(越小越好）和LogL值(越大越好）对模型3和4进行比较分析，结果表明母性共同环境效应比DGE和IGE遗传效应更为重要，应该放入模型中(A comparison of likelihoods and AIC of models 3 and 4 shows stronger evidence for maternal common environmental effects than for genetic effects)。但是包括母性共同环境效应后，无法有效估计DGE和IGE。&lt;/p&gt;
&lt;p&gt;只比较model 4和model 5，分析IGE效应的显著性。结果表明，包括IGE的模型5具有更小的AIC值。LRT也表明，IGE效应是显著的。&lt;/p&gt;
&lt;p&gt;无论模型中是否包括遗传效应，非遗传效应估计值均十分稳定(The non-genetic random effects were robust to the inclusion or exclusion of genetic effects from the model)。&lt;/p&gt;
&lt;p&gt;文章也测试了社会母性共同环境效应，它指的是待分析个体的母性环境对同一测试组内其他个体生长速度的影响，结果表明是不显著的，因此没有加在模型中。(原理是类似的，把其同伴个体所在家系编号，作为很多列，依次排列）。&lt;/p&gt;
&lt;p&gt;根据模型3和模型5的计算结果，测试组和非遗传亲缘效应统计性检验显著，在表型方差中所占的比例分别为17%和10%。模型2和模型3的比较结果用来检验非遗传亲缘效应(The comparision of model 2 and model 3 served the purpose of testing the non-genetic kin effect)。LRT检验表明，模型3要优于模型2 (The LRT between model 2 and model 3 indicated that model 3 was statistically much better than model 2. AIC的比较也表明model 5要优于model 2 (The same result was found when comparing model 5 to model 2)，这表明非遗传亲缘效应是非常显著的(Thus non-genetic kin effects were highly significant)。&lt;strong&gt;这个结果表明与不同组内该家系个体相比，同一组内该家系个体相似度更高。这个结论可能意味着同一家系内个体可能互相认识，识别。&lt;/strong&gt;剔除该效应，除了残差方差，其他方差组分都变大了。因此，如果不在模型中包括该效应，遗传参数估计值会出现偏差。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;4. 讨论&lt;/h2&gt;
&lt;div id=&#34;overall-findings&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;4.1 主要发现overall findings&lt;/h3&gt;
&lt;p&gt;不考虑母性共同环境效应，IGE存在且显著。没有获得存活性状的IGE，低遗传力可能是一个主要原因？&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;dgeige&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;4.2 基于巢式交配设计的DGE和IGE遗传参数&lt;/h3&gt;
&lt;p&gt;加入母性共同环境效应，为什么会导致DGE和IGE遗传参数难以剖分？作者认为不成功的巢式交配设计，是导致母性共同环境效应与DGE混淆剖分不出来的主要原因。在167个家系中，只有54个半同胞家系，比例只有30%。&lt;strong&gt;注：需要强调是的，在对虾中使用的3FAM设计，只有16%的半同胞家系，依然可以剖分出共同环境效应，需要深刻剖析其原因，如果真的可以，那么就不需要建立大规模半同胞家系了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在包括母性共同环境效应的模型5中，仅有的遗传效应是IGE。因此作者推测，IGE的遗传方差可能会包括DGE遗传方差，因此会被高估？但是在区块设计中，一个家系仅仅会与另外一个特定的家系组合在一起一次，尽管存在直接遗传方差，但是这两个家系个体间并不会产生协方差。因此，IGE方差中并不会包括来自于DGE的协方差。DGE方差应该是跟母性共同环境效应方差混淆在一起了。因为无论是否包括DGE效应，母性共同环境效应方差均没有发生变化。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：在混养模式下，母性共同环境效应跟DGE效应混淆在一起很好理解。譬如，如果将家系间(母本遗传方差）的差异解释为DGE方差，难么为了进一步剖分出以家系为单位的共同环境效应，需要家系间有足够的遗传联系。当没有足够的遗传联系，那么两者很容易混淆在一起，无法剖分。在分组的情况下，组效应还会进一步降低家系间的差异。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本实验的区块设计，每个家系重复10次；而3FAM设计，每个家系重复3次。但是3FAM设计也有它的优势，每个组中有3个家系，在100个组中混合100个家系，跟区块设计在500个组中混合100个家系，肯定是3FAM设计有更多的家系会分享相同的环境。这个共同的环境是非常有利于剖分加性遗传效应的，因为环境越相似性，同一个家系不同个体间的表现会越一致，这是准确估计加性遗传效应的一个重要条件。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;但是这还是没有回答前边的问题，为什么3FAM设计，更加容易剖分出共同环境效应，甚至混养模式剖分不出来，3FAM设计反而可以。&lt;strong&gt;试着反过来推一下，在混养模式下，如果不考虑系谱即家系间的亲缘关系，共同环境效应跟家系加性效应是完全混淆在一起的;而在3FAM模式下，相当于每个家系有三个重复，而且是在不同的环境中，难么有重复可能意味着可以更加准确地剖分共同环境效应？每个家系的不同重复，可以单独推算出一个共同环境效应来，这样就跟DGE不是完全混淆了？因为不同的重复，所使用的家系个体也是不一样的。推测在本文使用的区块设计中，测试组太多了，导致组效应仅能代表两个家系组合的效应，难么组效应是否会跟IGE效应混淆在一起？&lt;/strong&gt;留待继续讨论。另外有一篇文章，是2017年发表的，讨论同样是区块设计，每个组中3个家系要比2个家系更好。&lt;/p&gt;
&lt;p&gt;如上所述，作者认为交配设计是母性共同环境效应跟DGE混淆的一个主要原因，因此作者建议采取析因设计，如1雄配5雌，来强化家系间的遗传联系。但是这种设计不切合育种现状：受限于设施，难以大幅度增加全同胞家系数量。在育种计划中，如果采用上述析因设计，将会使用更少的父本个体，降低有效群体大小，不利于提高育种目标性状的选择反应。&lt;/p&gt;
&lt;p&gt;来自model 1，2，3的EBV (DGE、DGE+IGE、DGE+IGE)与来自model 5的EBV(IGE)之间，相关系数不高，这表明IGE是非常重要的。如果在育种分析中，只根据IGE选留个体，很明显不会选出那些由自身基因决定生长速度的个体，会影响目标性状的选择反应。&lt;strong&gt;模型1实际上是DGE；模型2是DGE+IGE；模型3 也是DGE+IGE，但是多了个非遗传亲缘效应；三个模型EBV之间的遗传相关都大于0.8，这表明是否考虑IGE，对于最终的遗传决定影响并不大？&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;heritable-comparision&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;4.3 可遗传的竞争(Heritable comparision)&lt;/h3&gt;
&lt;p&gt;基于模型3的DGE-IGE遗传相关表明，存在中等程度的竞争，这种竞争几乎完全抵消了IGE贡献的可遗传变异。IGE的存在并没有改变总遗传变异，TBV方差与DGE方差几乎相等。但是这并不意味着选择反应也不受影响。负的DGE-IGE协方差将会降低选择的准确性，最终降低选择反应(The negative direcct-indirect genetic covariance will reduce the accuracy of selection, which in turn reduces response)。以群体选择为例，当鱼随机在不同的组中养殖测试，而不是以家系为单位分布在不同的组中时(when fish are reared in groups at random with respect to families.)，真实的DGE准确性表述为下述方程：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\rho = \frac{\sigma_{A_{D}} + (n-1)\sigma_{A_{DS}}}{\sigma_{TBV}\sigma_{P}}=0.46\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;模型3中，DGE遗传力为0.35，准确性为sqrt(0.35)=0.59，比考虑IGE的准确性要高28%(需要注意，表5中模型3的遗传力作者忘记计算了&lt;span class=&#34;math inline&#34;&gt;\(h^{2}\)&lt;/span&gt;)。负的DGE-IGE遗传相关表明,在竞争性的环境下，当鱼类个体随机而不是以家系为单位分布在测试组时，针对个体性能的选择，将会增加竞争(The negative direct–indirect genetic correlation indicates that selection for individual performance will increase competition when fish are kept in groups composed at random with respect to family)。当测试组内个体间具有亲缘关系时，可以避免竞争加剧的问题。&lt;/p&gt;
&lt;p&gt;竞争不但会降低生长性能，而且会降低鱼类的福利性状。基于总育种值TBV进行选择，可以同时改良产量和福利性状。此外，Neilsen等表明在大西洋鳕育种中考虑IGEs可以改良福利性状的遗传进展。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level3&#34;&gt;
&lt;h3&gt;4.4 组效应和非遗传亲缘效应&lt;/h3&gt;
&lt;p&gt;在本文中，组效应贡献了16-21%的表型方差。相对于其他遗传和非遗传效应，组效应所占的比例较高(This is hight compared to other genetic and non-genetic effects in the model)。这表明每个测试组内个体具有相似的性状值，可能是因为组内个体共享一个共同社会环境的结果（&lt;strong&gt;这句话的意思是不同组个体间的竞争强度也不同？有的组，个体间竞争比较强，有的组个体间竞争比较弱？&lt;/strong&gt;）。不包括测试组效应，获得的DGE和IGE遗传方差估计值偏高，与已有的研究结果也是相一致（&lt;strong&gt;不包括测试组效应时，它可能就会混到DGE和IGE遗传方差中，由于每个家系只分布在少量组（10个），因此测试组间的差异跟家系间的差异会部分混淆，DGE和IGE遗传方差估计值偏高&lt;/strong&gt;）。&lt;/p&gt;
&lt;p&gt;在本文中，我们拟合测试组与家系的交互随机效应作为非遗传亲缘效应。此效应非常显著，解释了表型方差的9%-11%。这表明同一个测试组内家系个体具有相似的性状值，个体跟它的同胞个体的交互，不同与其他家系的个体，意味着可能存在亲缘识别kin-recognition。从进化遗传学角度来看(from an evolutionary perspective)，这种亲缘识别的行为会增加个体的广义适应度inclusive fitness（从网上搜了一下，这是进化遗传学上的一个&lt;a href=&#34;http://blog.sciencenet.cn/blog-2460731-1073296.html&#34;&gt;热点&lt;/a&gt;）。&lt;strong&gt;分析了一下虾的数据，占得比重&amp;lt;4%，存在亲缘识别的概率太低。&lt;/strong&gt;在鲑、罗非鱼上已有亲缘识别的报道。亲缘识别行为会增加IGE分析的复杂度。因为具有亲缘关系个体间的IGE效应是不同于非亲缘个体间的。此外，不同家系针对不同测试组环境的敏感性差异也会导致非遗传亲缘效应(the non-genetic kin effect may originate from environmental variation between groups together with differential sensitivity of families to such environmental variation)。&lt;strong&gt;换句话说，基因型与环境的交互也会导致非遗传亲缘效应&lt;/strong&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;implication-for-aquaculture-production&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;4.5 在水产养殖中的应用(Implication for aquaculture production)&lt;/h3&gt;
&lt;p&gt;在养殖场等，很难观察和记录鱼类行为，导致无法评估其影响。但是可以推测鱼类个体间的竞争会随着生产系统和投喂策略变化。通常会在漂浮网箱、水池和循环水养殖系统中高密度养殖鱼类个体，而在土池中进行低密度养殖。在本文中，一个关键问题是，作者在设置的竞争性实验环境下所发现的IGE，是否可以代表商业养殖场中的竞争情况？在商业养殖场，通常是组内个体数量非常多，高密度养殖，是否也会存在较大的IGE组分(In this study, one of the key questions is whether IGEs found here are representative of IGEs occuring in commercial farms)？&lt;/p&gt;
&lt;p&gt;接下来，作者从饲料和密度两个角度进行了探讨。&lt;/p&gt;
&lt;p&gt;大部分商业养殖场充足投喂饲料，这会降低群体内的竞争。此外，投喂时，本实验饲料放置在网箱一角，而商业养殖场会在整个水面投喂。推测商业养殖环境，竞争会小一些。作者进一步参考另外一个参数，即变异系数，来探讨养殖环境竞争程度的差别。与本实验养殖环境相比，在商业环境下，收获体重的变异系数更大，在40%-59.8%。这表明获取饲料的方式可能不会加剧群体的竞争性能，商业群体的竞争性要大于本群体。&lt;/p&gt;
&lt;p&gt;除了投喂方式，商业养殖场的放苗密度也远大于本实验。商业养殖场的放苗密度在1500尾/平方米，本实验仅为11尾/平方米。对于受社会交互影响的性状，总遗传方差和选择反应主要由组大小和IGEs之间的关系决定。&lt;strong&gt;在一个有很多个体的大组中，一对个体间的交互可能会非常少，这种现象称为稀释(dilution)&lt;/strong&gt;。迄今为止，在商业养殖条件下，关于水产物种竞争交互稀释程度的相关研究，未见报道。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;5. 总结&lt;/h2&gt;
&lt;p&gt;作者认为本文是在水产动物中第一次大规模开展的IGE测试实验。&lt;strong&gt;注：最早的实验开始于大西洋鳕鱼，然后是罗非鱼，南美白对虾。&lt;/strong&gt;令人遗憾的是，由于母性共同环境效应与DGE混淆，导致不能够同时估计出所有的遗传参数。当估计模型中不包括母性共同环境效应时，IGE的统计性检验达到显著水平。当估计模型中包括母性共同环境效应时，也可以检测到存在IGE (p=0.057)。&lt;strong&gt;注：因为没有达到显著水平，因此说存在。&lt;/strong&gt;利用不包括母性共同环境效应的模型，估计出负的DGE-IGE遗传相关，这表明如果在本文的环境中进行传统选择，将会增加个体间的竞争。作者也发现，存活DGE与收获体重IGE之间存在一个较高的负相关，这表明在本文的竞争性环境中(… environment that prevailed in our experiment)，具有更好存活基因的个体，会抑制同一组内伙伴个体的生长速度。母性共同环境效应与DGE效应的混淆，表明一雄配2雌的交配设计很难同时估计出所有的遗传参数。&lt;strong&gt;The confounding … indicated … has limited power to estimate all genetic parameters.&lt;/strong&gt; 我们必须要认识到，尽管其它交配设计可以获得更为准确的遗传参数，但是由于家系的数量受到限制，因此对于一个长期遗传改良计划，难以把它们做为最优设计。个体间的竞争程度受不同的养殖系统和投喂策略影响，因此对于如何在商业养殖工业利用IGE效应，还需要做更多的调查研究。&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>如何理解遗传组效应</title>
      <link>/post/how-to-understand-genetic-groups/</link>
      <pubDate>Tue, 03 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/how-to-understand-genetic-groups/</guid>
      <description>&lt;p&gt;参考材料来自于&lt;a href=&#34;https://jvanderw.une.edu.au/Chapter14.pdf&#34;&gt;Julius van der Werf的教程&lt;/a&gt;。&lt;/p&gt;
&lt;div id=&#34;genetic-group&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;什么情况下需要考虑遗传组效应（Genetic group）&lt;/h2&gt;
&lt;p&gt;当数据集中的个体来源不同时，在遗传评估模型中需要考虑遗传组。当个体的亲本信息未知时，通常会假定亲本来自于同质群体（homogeneous population），具有相同的期望均值，利用混合模型估计育种值。亲本信息未知的个体，通常称为“基础个体”，奠基者个体更为合适？对于这些奠基者个体，如果它们不是来自于一个同质群体，为了区分不同奠基者个体的遗传水平，需要考虑遗传组效应。 需要注意的一点是，对于一个基础群体，亲缘关系矩阵已经考虑了所有由选择产生的遗传差异。举例说明：从一个基础群体开始分别建立高低两个选育系，如果系谱和性能测定数据完成，那么在遗传评估中，我们是不需要考虑遗传组效应的。如果利用系谱和性能测定数据，仍然剖分个体间的遗传差异，那么需要在分析中考虑遗传组效应。如果个体来自于不同的品种，是一个需要考虑的问题。&lt;/p&gt;
&lt;p&gt;作者给出了两个绵羊品种，Finnsheep和Merinos。其中Finnsheep品种的每窝产仔数均值可以达到3，而Merinos品种的每窝产仔数最多为1。由于每窝产仔数是一个低遗传力性状，如果在遗传评估中忽略品种的效应，那么会使所有个体的EBV趋向于均值（0）。但实际情况不应该是这样的，每窝产仔数的品种效应应该是很强的，而且是可信的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一开始并没有很好的理解上述说法。原来脑海中的印象是，如果不考虑遗传组，难么家系或者个体间的遗传差异会变大，那么遗传参数估计值，如遗传力会偏高。作者举例的意思是说，由于遗传力很低，那么个体的育种值也会很小，但是实际上个体的育种值应该包括品种效应，应该会更大才对。&lt;/strong&gt;那么可以推测，对于高遗传力性状，遗传组对育种值的影响会比较小，但是可能会对遗传力等估计值产生较大的影响。&lt;/p&gt;
&lt;p&gt;一个比较简单的方法，可以把个体的来源作为&lt;strong&gt;固定效应&lt;/strong&gt;，其关联矩阵X写法&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;个体类型&lt;/th&gt;
&lt;th&gt;Finnsheep (F)&lt;/th&gt;
&lt;th&gt;Merinos (M)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Finnsheep (F)&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Merinos (M)&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;F×M&lt;/td&gt;
&lt;td&gt;0.5&lt;/td&gt;
&lt;td&gt;0.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;M×(F×M)&lt;/td&gt;
&lt;td&gt;0.25&lt;/td&gt;
&lt;td&gt;0.75&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注意，其中的0.25表示Finnsheep只占&lt;span class=&#34;math inline&#34;&gt;\(\frac{1}{4}\)&lt;/span&gt;，0.75表示Merinos占&lt;span class=&#34;math inline&#34;&gt;\(\frac{3}{4}\)&lt;/span&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;带有遗传组的加性遗传模型&lt;/h2&gt;
&lt;p&gt;当奠基者个体来自不同的群体时，把来源群体作为固定效应是可以的。但是，当来源群体本身是一个杂交群体时（2个或者多个群体杂交），作为固定效应很难分析。Quass（1988）提出了群体内加性遗传相关的基本结构，给出了把遗传组作为随机效应的分析模型。&lt;/p&gt;
&lt;p&gt;传统模型 &lt;span class=&#34;math display&#34;&gt;\[y=Xb+Zu+e\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;修改后的模型 &lt;span class=&#34;math display&#34;&gt;\[y=Xb+ZQg+Za+e\]&lt;/span&gt; 其中g表示固定的组效应，a表示遗传组内随机个体加性遗传效应。矩阵Q指的是个体与组的关联矩阵，而ZQ实际上把性状测定值与组进行关联。&lt;/p&gt;
&lt;p&gt;估计的育种值等于：&lt;br /&gt;
&lt;span class=&#34;math display&#34;&gt;\[\hat{u}=Q\hat{g}+\hat{a}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;实际上在模型中g是一个固定效应，模型方程可以写为：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
 X^{&amp;#39;}X &amp;amp; X^{&amp;#39;}ZQ &amp;amp; X^{&amp;#39;}Z \\ 
 Q^{&amp;#39;}Z^{&amp;#39;}X &amp;amp;  Q^{&amp;#39;}Z^{&amp;#39;}ZQ &amp;amp; Q^{&amp;#39;}Z^{&amp;#39;}Z \\ 
 Z^{&amp;#39;}X &amp;amp; Z^{&amp;#39;}ZQ  &amp;amp; Z^{&amp;#39;}Z+\alpha A^{-1}
\end{bmatrix} 
\begin{bmatrix}
 b \\
 g \\
 a
\end{bmatrix} 
= 
\begin{bmatrix}
 X^{&amp;#39;}y \\
 Q^{&amp;#39;}Z^{&amp;#39;}y \\
 Z^{&amp;#39;}y
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;上述方程左边部分看似复杂，实际上这样记忆，比较简单：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;X&lt;/th&gt;
&lt;th&gt;ZQ&lt;/th&gt;
&lt;th&gt;Z&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(X^{&amp;#39;}\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(X^{&amp;#39;}X\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(X^{&amp;#39;}ZQ\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(X^{&amp;#39;}Z\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(Q^{&amp;#39;}Z^{&amp;#39;}\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(Q^{&amp;#39;}Z^{&amp;#39;}X\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(Q^{&amp;#39;}Z^{&amp;#39;}ZQ\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(Q^{&amp;#39;}Z^{&amp;#39;}Z\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(Z^{&amp;#39;}\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(Z^{&amp;#39;}X\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(Z^{&amp;#39;}ZQ\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(Z^{&amp;#39;}Z+\alpha A^{-1}\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;对角线上是自己跟自己，非对角线是互相结合在一起。之所以行是转置矩阵，也是很好理解的。&lt;/p&gt;
&lt;p&gt;举一个例子，如果有10条测定记录，b如果有3个固定效应，那么b是3×1列向量，那么&lt;span class=&#34;math inline&#34;&gt;\(X^{&amp;#39;}Xb\)&lt;/span&gt;要想可以相乘，&lt;span class=&#34;math inline&#34;&gt;\(X^{&amp;#39;}X\)&lt;/span&gt;必须要是3列。而我们知道，设计矩阵X是10×3列，&lt;span class=&#34;math inline&#34;&gt;\(X^{&amp;#39;}X\)&lt;/span&gt;正好是一个3×10×10×3=3×3列矩阵，反过来是10×10矩阵，是不可以的，其他相同原理。&lt;/p&gt;
&lt;p&gt;上述方程中，难题可能是在于如何建立Q矩阵？（In practice such equation would cause problems, unless a systematic way is found to create the Q matrix，这句话不是很理解！）&lt;/p&gt;
&lt;p&gt;Quaas对上述方程进行了变换，从左边统一乘以下述矩阵：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
I &amp;amp; 0 &amp;amp; 0 \\
0 &amp;amp; I &amp;amp; -Q^{&amp;#39;} \\
0 &amp;amp; 0 &amp;amp; I
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
I &amp;amp; 0 &amp;amp; 0 \\
0 &amp;amp; I &amp;amp; -Q^{&amp;#39;} \\
0 &amp;amp; 0 &amp;amp; I
\end{bmatrix}
\begin{bmatrix}
 X^{&amp;#39;}X &amp;amp; X^{&amp;#39;}ZQ &amp;amp; X^{&amp;#39;}Z \\ 
 Q^{&amp;#39;}Z^{&amp;#39;}X &amp;amp;  Q^{&amp;#39;}Z^{&amp;#39;}ZQ &amp;amp; Q^{&amp;#39;}Z^{&amp;#39;}Z \\ 
 Z^{&amp;#39;}X &amp;amp; Z^{&amp;#39;}ZQ  &amp;amp; Z^{&amp;#39;}Z+\alpha A^{-1}
\end{bmatrix}
\begin{bmatrix}
b \\
g \\
a
\end{bmatrix}
=
\begin{bmatrix}
I &amp;amp; 0 &amp;amp; 0 \\
0 &amp;amp; I &amp;amp; -Q^{&amp;#39;} \\
0 &amp;amp; 0 &amp;amp; I
\end{bmatrix}
\begin{bmatrix}
X^{&amp;#39;}y \\
Q^{&amp;#39;}Z^{&amp;#39;}y \\
Z^{&amp;#39;}y
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;方程会变化为：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
 X^{&amp;#39;}X &amp;amp; X^{&amp;#39;}ZQ &amp;amp; X^{&amp;#39;}Z \\ 
 0 &amp;amp;  0 &amp;amp; -\alpha Q^{&amp;#39;}A^{-1} \\ 
 Z^{&amp;#39;}X &amp;amp; Z^{&amp;#39;}ZQ  &amp;amp; Z^{&amp;#39;}Z+\alpha A^{-1}
\end{bmatrix}
\begin{bmatrix}
b \\
g \\
a
\end{bmatrix}
=
\begin{bmatrix}
X^{&amp;#39;}y \\
0 \\
Z^{&amp;#39;}y
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对上述方程组继续进行变换：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
 X^{&amp;#39;}X &amp;amp; X^{&amp;#39;}ZQ &amp;amp; X^{&amp;#39;}Z \\ 
 0 &amp;amp;  0 &amp;amp; -\alpha Q^{&amp;#39;}A^{-1} \\ 
 Z^{&amp;#39;}X &amp;amp; Z^{&amp;#39;}ZQ  &amp;amp; Z^{&amp;#39;}Z+\alpha A^{-1}
\end{bmatrix}
\begin{bmatrix}
I &amp;amp; 0 &amp;amp; 0 \\
0 &amp;amp; I &amp;amp; 0 \\
0 &amp;amp; -Q &amp;amp; I
\end{bmatrix}
\begin{bmatrix}
I &amp;amp; 0 &amp;amp; 0 \\
0 &amp;amp; I &amp;amp; 0 \\
0 &amp;amp; Q &amp;amp; I
\end{bmatrix}
\begin{bmatrix}
b \\
g \\
a
\end{bmatrix}
=
\begin{bmatrix}
X^{&amp;#39;}y \\
0 \\
Z^{&amp;#39;}y
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;上式中： &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
I &amp;amp; 0 &amp;amp; 0 \\
0 &amp;amp; I &amp;amp; 0 \\
0 &amp;amp; -Q &amp;amp; I
\end{bmatrix}
\begin{bmatrix}
I &amp;amp; 0 &amp;amp; 0 \\
0 &amp;amp; I &amp;amp; 0 \\
0 &amp;amp; Q &amp;amp; I
\end{bmatrix}
=I
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;互为逆矩阵，乘积为单位矩阵。&lt;/p&gt;
&lt;p&gt;方程组左手边，前两个矩阵相乘后两个矩阵相乘，得到新的方程组：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
 X^{&amp;#39;}X &amp;amp; 0 &amp;amp; X^{&amp;#39;}Z \\ 
 0 &amp;amp;  \alpha Q^{&amp;#39;}A^{-1}Q &amp;amp; -\alpha Q^{&amp;#39;}A^{-1} \\ 
 Z^{&amp;#39;}X &amp;amp; -\alpha A^{-1}Q  &amp;amp; Z^{&amp;#39;}Z+\alpha A^{-1}
\end{bmatrix}
\begin{bmatrix}
b \\
g \\
u=Qg+a
\end{bmatrix}
=
\begin{bmatrix}
X^{&amp;#39;}y \\
0 \\
Z^{&amp;#39;}y
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;关于新的方程组，作者的评价说实话，一点都没看懂。&lt;/p&gt;
&lt;p&gt;第一个优点，作者讲的是对于固定效应，组的两个非对角线元素（第2,1或者1,2）都是零；而且右手边，组元素（2,1）也是零；意思应该是说计算更加简单。&lt;/p&gt;
&lt;p&gt;第二个优点：组内个体的解，直接包括的组效应（u=Qg+a）。作者讲，这是在求解混合模型方程时，是一个重要的优势。&lt;/p&gt;
&lt;p&gt;然而作者认为最重要的是建立了一种定义遗传组的灵活形式。作者认为组方程跟不带有数据的个体方程十分类似。个人理解，组方程指的应该是这样一个方程：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\alpha Q^{&amp;#39;}A^{-1}Qg - \alpha Q^{&amp;#39;}A^{-1}u = 0\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;个体动物方程：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Z^{&amp;#39;}Xb - \alpha A^{-1}Qg + (Z^{&amp;#39;}Z+\alpha A^{-1})u = Z^{&amp;#39;}y\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;没有看出二者明显的相似性来。作者认为，遗传组就像祖先个体一样，定义个体跟遗传组的亲缘矩阵（Q矩阵）。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;assigning-animals-to-genetic-groups&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;分配个体到遗传组（Assigning animals to genetic groups&lt;/h2&gt;
&lt;p&gt;可以根据基础个体的品种、出生年份来定义组。需要明确的一个问题，是如何定义组的关联矩阵，个体的观测值如何与组关联。&lt;/p&gt;
&lt;p&gt;作者举了个例子：&lt;/p&gt;
&lt;p&gt;个体的祖先可能来自不同的品种，而且在不同年份出生。那么根据系谱可以推算出，各组对个体的遗传贡献，来定义关联矩阵：1998年出生的品种1占0.25、2002年出生的品种2占0.25、2004年出生的品种2占0.5。个体中每个组的贡献，实际上与它的遗传贡献是密切相关的。Quass定义了一种方法，可以根据个体与组的关系，推导出它的后代与这些组的关系。&lt;/p&gt;
&lt;p&gt;基础个体，原则上我们是不知道他们的系谱的，因此必须要根据起源，把他们分派到不同的遗传组。根据Quass的方法，不是把基础群体直接分配到组，而是把它们分配给虚拟亲本个体（dummy parents），虚拟个体直接分为不同的组，作者也称这些个体为幽灵个体（phantom parents）。例如，一头普通的奶牛可以分配给一头幽灵公牛。幽灵公牛可以划分为1985-1990年出生的公牛组。幽灵母牛可以分配给1992年母牛组。分配幽灵亲本到一个遗传组，后代通过系谱连接到遗传组。事实上，我们可以处理幽灵亲本作为系谱的正常部分（例如Henderson系数规则）。这创建了一个非常灵活的框架，用来分配个体到遗传组。&lt;/p&gt;
&lt;p&gt;新的育种值估计模型为：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
u_{b} \\
u
\end{bmatrix}
=
\begin{bmatrix}
0 &amp;amp; 0 \\
P_{b} &amp;amp; P
\end{bmatrix}
\begin{bmatrix}
u_{b} \\
u
\end{bmatrix}
+
\begin{bmatrix}
u_{b} \\
w
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;span class=&#34;math inline&#34;&gt;\(P_{b}\)&lt;/span&gt;指的是个体到幽灵亲本的亲缘矩阵，P指的是个体到非幽灵个体亲缘矩阵，看Quass1988年文章，这里指的是直接到双亲的亲缘关系，每一行只有两个数（0.5）。&lt;/p&gt;
&lt;p&gt;未知幽灵亲本的期望均值公式为：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[E(u_{b})=Q_{b}g\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;span class=&#34;math inline&#34;&gt;\(Q_{b}\)&lt;/span&gt;是基础个体到遗传组的关联矩阵，g是遗传组效应。&lt;/p&gt;
&lt;p&gt;已知个体的育种值向量u，根据上述方程，可以表述为：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
u = P_{b}u_{b}+Pu+w \\
u-Pu = P_{b}u_{b}+w \\
(I-P)u =  P_{b}u_{b}+w \\
(I-P)^{-1}(I-P)u =  (I-P)^{-1}P_{b}u_{b} +  (I-P)^{-1}w \\
u =  (I-P)^{-1}P_{b}u_{b} +  (I-P)^{-1}w \\
E(u)= (I-P)^{-1}P_{b}E(u_{b}) + (I-P)^{-1}E(w) \\
E(u)= (I-P)^{-1}P_{b}Q_{b}g = Qg
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中Q是所有已知个体到遗传组的关联矩阵。猜想，这里遗传组应该就是用幽灵个体代替？作者举例如下：&lt;/p&gt;
&lt;p&gt;譬如有个体数量为n，遗传组数量为p的数据集，那么Q矩阵是n×p矩阵。Q中的第&lt;span class=&#34;math inline&#34;&gt;\((i,j)^{th}\)&lt;/span&gt;个元素表示第&lt;span class=&#34;math inline&#34;&gt;\(i^{th}\)&lt;/span&gt;个体基因来自第&lt;span class=&#34;math inline&#34;&gt;\(j^{th}\)&lt;/span&gt;个遗传组的百分比。因此，遗传组与祖先个体非常相似。仅仅直接的遗传联系（亲子？）会被考虑，其他遗传联系会自动被implied？仅仅那些有1个或者2个亲本未知的个体，需要指定其遗传组。丢失的亲本会自动被分组。&lt;/p&gt;
&lt;p&gt;建立组方程的规则总结为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为基础个体分配幽灵（虚拟）个体&lt;/li&gt;
&lt;li&gt;定义幽灵个体属于哪个遗传组&lt;/li&gt;
&lt;li&gt;利用系谱（包括幽灵个体）建立混合模型方程组。对于第&lt;span class=&#34;math inline&#34;&gt;\(i^{th}\)&lt;/span&gt;个体，对其孟德尔抽样方差求逆：&lt;span class=&#34;math inline&#34;&gt;\(b_{i} = 4/(2+分配到遗传组的亲本数)\)&lt;/span&gt;；然后把&lt;span class=&#34;math inline&#34;&gt;\(b_{i}\)&lt;/span&gt;增加到&lt;span class=&#34;math inline&#34;&gt;\(A^{-1}\)&lt;/span&gt;，具体方法为：把&lt;span class=&#34;math inline&#34;&gt;\(-b_{i}/2\)&lt;/span&gt;加到&lt;span class=&#34;math inline&#34;&gt;\(A^{-1}\)&lt;/span&gt;矩阵的(i,s), (i,d), (s,i) 和 (d,i)位置元素上，把&lt;span class=&#34;math inline&#34;&gt;\(-b_{i}/4\)&lt;/span&gt;加到&lt;span class=&#34;math inline&#34;&gt;\(A^{-1}\)&lt;/span&gt;矩阵的(s,s), (s,d), (d,s) 和 (d,d)位置元素上。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当两个亲本已知时，&lt;span class=&#34;math inline&#34;&gt;\(b_{i}=2\)&lt;/span&gt;，表示个体跟遗传组没有联系。因此增加的系数分别是2，-1和1/2，与NRm分子亲缘关系矩阵的逆矩阵系数相一致（2个亲本已知）。如果一个亲本已知，那么&lt;span class=&#34;math inline&#34;&gt;\(b_{i}=4/3\)&lt;/span&gt;，因此增加的系数分别是4/3，-2/3和1/3，与NRm分子亲缘关系矩阵的逆矩阵系数相一致（1个亲本已知）。如果没有亲本是已知的，表示两个亲本都需要分配到组，那么&lt;span class=&#34;math inline&#34;&gt;\(b_{i}=1\)&lt;/span&gt;,因此增加的系数分别是1，-1/2和1/4。&lt;/p&gt;
&lt;p&gt;逻辑解释：如果双亲已知，那么育种值方差的一半（父母本各一半育种值，从方差角度，就是1/4+1/4=1/2）是可以被解释的，剩余的1/2，转换为倒数，就是&lt;span class=&#34;math inline&#34;&gt;\(\frac{1}{2}^{-1}=2\)&lt;/span&gt;，加到A矩阵的逆矩阵相应系数上。&lt;/p&gt;
&lt;p&gt;到此为止，没怎么看明白。&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>read a file by python</title>
      <link>/post/read-a-file-by-python/</link>
      <pubDate>Sun, 11 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/read-a-file-by-python/</guid>
      <description>&lt;p&gt;栾佳硕的任务：&lt;/p&gt;
&lt;p&gt;1.建立一个文件，在文件中写入以下内容：&lt;/p&gt;
&lt;p&gt;Watch the cartoon.&lt;/p&gt;
&lt;p&gt;go fishing.&lt;/p&gt;
&lt;p&gt;(不会了话看编程书）&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;f = open(&amp;quot;lsj.txt&amp;quot;,&amp;quot;w&amp;quot;)
f.writelines(&amp;quot;Watch the  cartoon.\ngo fishing&amp;quot;)
f.close()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2.把它读出来，并且用format方法显示出来。&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;with open(&amp;quot;lsj.txt&amp;quot;,&amp;quot;r&amp;quot;) as f:
    for line in f.readlines():
        print(line.strip())&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Watch the  cartoon.
## go fishing&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
